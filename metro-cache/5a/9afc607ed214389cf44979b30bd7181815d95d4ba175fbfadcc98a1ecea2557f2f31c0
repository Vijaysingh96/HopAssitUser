{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./class/RNFetchBlobSession","data":{"isAsync":false}},{"name":"./class/RNFetchBlobWriteStream","data":{"isAsync":false}},{"name":"./class/RNFetchBlobReadStream","data":{"isAsync":false}},{"name":"./class/RNFetchBlobFile","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n\n  var _RNFetchBlobSession = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./class/RNFetchBlobSession\"));\n\n  var _RNFetchBlobWriteStream = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./class/RNFetchBlobWriteStream\"));\n\n  var _RNFetchBlobReadStream = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./class/RNFetchBlobReadStream\"));\n\n  var _RNFetchBlobFile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./class/RNFetchBlobFile\"));\n\n  var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;\n  var dirs = {\n    DocumentDir: RNFetchBlob.DocumentDir,\n    CacheDir: RNFetchBlob.CacheDir,\n    PictureDir: RNFetchBlob.PictureDir,\n    MusicDir: RNFetchBlob.MusicDir,\n    MovieDir: RNFetchBlob.MovieDir,\n    DownloadDir: RNFetchBlob.DownloadDir,\n    DCIMDir: RNFetchBlob.DCIMDir,\n    SDCardDir: RNFetchBlob.SDCardDir,\n    SDCardApplicationDir: RNFetchBlob.SDCardApplicationDir,\n    MainBundleDir: RNFetchBlob.MainBundleDir,\n    LibraryDir: RNFetchBlob.LibraryDir\n  };\n\n  function addCode(code, error) {\n    error.code = code;\n    return error;\n  }\n\n  function session(name) {\n    var s = _RNFetchBlobSession.default.getSession(name);\n\n    if (s) return new _RNFetchBlobSession.default(name);else {\n      _RNFetchBlobSession.default.setSession(name, []);\n\n      return new _RNFetchBlobSession.default(name, []);\n    }\n  }\n\n  function asset(path) {\n    if (_reactNative.Platform.OS === 'ios') {\n      if (/^assets-library\\:\\/\\//.test(path)) return path;\n    }\n\n    return 'bundle-assets://' + path;\n  }\n\n  function createFile(path, data) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (encoding.toLowerCase() === 'ascii') {\n      return Array.isArray(data) ? RNFetchBlob.createFileASCII(path, data) : Promise.reject(addCode('EINVAL', new TypeError('`data` of ASCII file must be an array with 0..255 numbers')));\n    } else {\n      return RNFetchBlob.createFile(path, data, encoding);\n    }\n  }\n\n  function writeStream(path) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n    var append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return new Promise(function (resolve, reject) {\n      RNFetchBlob.writeStream(path, encoding, append, function (errCode, errMsg, streamId) {\n        if (errMsg) {\n          var err = new Error(errMsg);\n          err.code = errCode;\n          reject(err);\n        } else resolve(new _RNFetchBlobWriteStream.default(streamId, encoding));\n      });\n    });\n  }\n\n  function readStream(path) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n    var bufferSize = arguments.length > 2 ? arguments[2] : undefined;\n    var tick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return Promise.resolve(new _RNFetchBlobReadStream.default(path, encoding, bufferSize, tick));\n  }\n\n  function mkdir(path) {\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return RNFetchBlob.mkdir(path);\n  }\n\n  function pathForAppGroup(groupName) {\n    return RNFetchBlob.pathForAppGroup(groupName);\n  }\n\n  function syncPathAppGroup(groupName) {\n    if (_reactNative.Platform.OS === 'ios') {\n      return RNFetchBlob.syncPathAppGroup(groupName);\n    } else {\n      return '';\n    }\n  }\n\n  function readFile(path) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return RNFetchBlob.readFile(path, encoding);\n  }\n\n  function writeFile(path, data) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    if (encoding.toLocaleLowerCase() === 'ascii') {\n      if (!Array.isArray(data)) {\n        return Promise.reject(addCode('EINVAL', new TypeError('\"data\" must be an Array when encoding is \"ascii\"')));\n      } else return RNFetchBlob.writeFileArray(path, data, false);\n    } else {\n      if (typeof data !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError(\"\\\"data\\\" must be a String when encoding is \\\"utf8\\\" or \\\"base64\\\", but it is \\\"\" + typeof data + \"\\\"\")));\n      } else return RNFetchBlob.writeFile(path, encoding, data, false);\n    }\n  }\n\n  function appendFile(path, data) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    if (encoding.toLocaleLowerCase() === 'ascii') {\n      if (!Array.isArray(data)) {\n        return Promise.reject(addCode('EINVAL', new TypeError('`data` of ASCII file must be an array with 0..255 numbers')));\n      } else return RNFetchBlob.writeFileArray(path, data, true);\n    } else {\n      if (typeof data !== 'string') {\n        return Promise.reject(addCode('EINVAL'), new TypeError(\"\\\"data\\\" must be a String when encoding is \\\"utf8\\\" or \\\"base64\\\", but it is \\\"\" + typeof data + \"\\\"\"));\n      } else return RNFetchBlob.writeFile(path, encoding, data, true);\n    }\n  }\n\n  function stat(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      RNFetchBlob.stat(path, function (err, stat) {\n        if (err) reject(new Error(err));else {\n          if (stat) {\n            stat.size = parseInt(stat.size);\n            stat.lastModified = parseInt(stat.lastModified);\n          }\n\n          resolve(stat);\n        }\n      });\n    });\n  }\n\n  function scanFile(pairs) {\n    return new Promise(function (resolve, reject) {\n      if (pairs === undefined) {\n        return reject(addCode('EINVAL', new TypeError('Missing argument')));\n      }\n\n      RNFetchBlob.scanFile(pairs, function (err) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve();\n      });\n    });\n  }\n\n  function hash(path, algorithm) {\n    if (typeof path !== 'string' || typeof algorithm !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"algorithm\"')));\n    }\n\n    return RNFetchBlob.hash(path, algorithm);\n  }\n\n  function cp(path, dest) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string' || typeof dest !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"destination\"')));\n      }\n\n      RNFetchBlob.cp(path, dest, function (err, res) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(res);\n      });\n    });\n  }\n\n  function mv(path, dest) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string' || typeof dest !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"destination\"')));\n      }\n\n      RNFetchBlob.mv(path, dest, function (err, res) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(res);\n      });\n    });\n  }\n\n  function lstat(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      RNFetchBlob.lstat(path, function (err, stat) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(stat);\n      });\n    });\n  }\n\n  function ls(path) {\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return RNFetchBlob.ls(path);\n  }\n\n  function unlink(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      RNFetchBlob.unlink(path, function (err) {\n        if (err) {\n          reject(addCode('EUNSPECIFIED', new Error(err)));\n        } else resolve();\n      });\n    });\n  }\n\n  function exists(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      try {\n        RNFetchBlob.exists(path, function (exist) {\n          resolve(exist);\n        });\n      } catch (err) {\n        reject(addCode('EUNSPECIFIED', new Error(err)));\n      }\n    });\n  }\n\n  function slice(src, dest, start, end) {\n    if (typeof src !== 'string' || typeof dest !== 'string') {\n      return reject(addCode('EINVAL', new TypeError('Missing argument \"src\" and/or \"destination\"')));\n    }\n\n    var p = Promise.resolve();\n    var size = 0;\n\n    function normalize(num, size) {\n      if (num < 0) return Math.max(0, size + num);\n      if (!num && num !== 0) return size;\n      return num;\n    }\n\n    if (start < 0 || end < 0 || !start || !end) {\n      p = p.then(function () {\n        return stat(src);\n      }).then(function (stat) {\n        size = Math.floor(stat.size);\n        start = normalize(start || 0, size);\n        end = normalize(end, size);\n      });\n    }\n\n    return p.then(function () {\n      return RNFetchBlob.slice(src, dest, start, end);\n    });\n  }\n\n  function isDir(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      try {\n        RNFetchBlob.exists(path, function (exist, isDir) {\n          resolve(isDir);\n        });\n      } catch (err) {\n        reject(addCode('EUNSPECIFIED', new Error(err)));\n      }\n    });\n  }\n\n  function df() {\n    return new Promise(function (resolve, reject) {\n      RNFetchBlob.df(function (err, stat) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(stat);\n      });\n    });\n  }\n\n  var _default = {\n    RNFetchBlobSession: _RNFetchBlobSession.default,\n    unlink: unlink,\n    mkdir: mkdir,\n    session: session,\n    ls: ls,\n    readStream: readStream,\n    mv: mv,\n    cp: cp,\n    writeStream: writeStream,\n    writeFile: writeFile,\n    appendFile: appendFile,\n    pathForAppGroup: pathForAppGroup,\n    syncPathAppGroup: syncPathAppGroup,\n    readFile: readFile,\n    hash: hash,\n    exists: exists,\n    createFile: createFile,\n    isDir: isDir,\n    stat: stat,\n    lstat: lstat,\n    scanFile: scanFile,\n    dirs: dirs,\n    slice: slice,\n    asset: asset,\n    df: df\n  };\n  exports.default = _default;\n});","lineCount":358,"map":[[9,0,7,0],[11,0,8,0],[13,0,9,0],[15,0,10,0],[17,0,11,0],[19,0,13,0],[19,6,13,6,"RNFetchBlob"],[19,17,13,36],[19,20,13,39,"NativeModules"],[19,47,13,53,"RNFetchBlob"],[19,58,13,0],[20,0,15,0],[20,6,15,6,"dirs"],[20,10,15,10],[20,13,15,13],[21,0,16,2,"DocumentDir"],[21,4,16,2,"DocumentDir"],[21,15,16,13],[21,17,16,17,"RNFetchBlob"],[21,28,16,28],[21,29,16,29,"DocumentDir"],[21,40,15,13],[22,0,17,2,"CacheDir"],[22,4,17,2,"CacheDir"],[22,12,17,10],[22,14,17,13,"RNFetchBlob"],[22,25,17,24],[22,26,17,25,"CacheDir"],[22,34,15,13],[23,0,18,2,"PictureDir"],[23,4,18,2,"PictureDir"],[23,14,18,12],[23,16,18,15,"RNFetchBlob"],[23,27,18,26],[23,28,18,27,"PictureDir"],[23,38,15,13],[24,0,19,2,"MusicDir"],[24,4,19,2,"MusicDir"],[24,12,19,10],[24,14,19,13,"RNFetchBlob"],[24,25,19,24],[24,26,19,25,"MusicDir"],[24,34,15,13],[25,0,20,2,"MovieDir"],[25,4,20,2,"MovieDir"],[25,12,20,10],[25,14,20,13,"RNFetchBlob"],[25,25,20,24],[25,26,20,25,"MovieDir"],[25,34,15,13],[26,0,21,2,"DownloadDir"],[26,4,21,2,"DownloadDir"],[26,15,21,13],[26,17,21,16,"RNFetchBlob"],[26,28,21,27],[26,29,21,28,"DownloadDir"],[26,40,15,13],[27,0,22,2,"DCIMDir"],[27,4,22,2,"DCIMDir"],[27,11,22,9],[27,13,22,12,"RNFetchBlob"],[27,24,22,23],[27,25,22,24,"DCIMDir"],[27,32,15,13],[28,0,23,2,"SDCardDir"],[28,4,23,2,"SDCardDir"],[28,13,23,11],[28,15,23,13,"RNFetchBlob"],[28,26,23,24],[28,27,23,25,"SDCardDir"],[28,36,15,13],[29,0,24,2,"SDCardApplicationDir"],[29,4,24,2,"SDCardApplicationDir"],[29,24,24,22],[29,26,24,24,"RNFetchBlob"],[29,37,24,35],[29,38,24,36,"SDCardApplicationDir"],[29,58,15,13],[30,0,25,2,"MainBundleDir"],[30,4,25,2,"MainBundleDir"],[30,17,25,15],[30,19,25,18,"RNFetchBlob"],[30,30,25,29],[30,31,25,30,"MainBundleDir"],[30,44,15,13],[31,0,26,2,"LibraryDir"],[31,4,26,2,"LibraryDir"],[31,14,26,12],[31,16,26,15,"RNFetchBlob"],[31,27,26,26],[31,28,26,27,"LibraryDir"],[32,0,15,13],[32,3,15,0],[34,0,29,0],[34,11,29,9,"addCode"],[34,18,29,0],[34,19,29,17,"code"],[34,23,29,0],[34,25,29,31,"error"],[34,30,29,0],[34,32,29,52],[35,0,30,2,"error"],[35,4,30,2,"error"],[35,9,30,7],[35,10,30,8,"code"],[35,14,30,2],[35,17,30,15,"code"],[35,21,30,2],[36,0,31,2],[36,11,31,9,"error"],[36,16,31,2],[37,0,32,1],[39,0,39,0],[39,11,39,9,"session"],[39,18,39,0],[39,19,39,17,"name"],[39,23,39,0],[39,25,39,51],[40,0,40,2],[40,8,40,6,"s"],[40,9,40,7],[40,12,40,10,"RNFetchBlobSession"],[40,40,40,29,"getSession"],[40,50,40,10],[40,51,40,40,"name"],[40,55,40,10],[40,56,40,2],[42,0,41,2],[42,8,41,6,"s"],[42,9,41,2],[42,11,42,4],[42,18,42,11],[42,22,42,15,"RNFetchBlobSession"],[42,49,42,11],[42,50,42,34,"name"],[42,54,42,11],[42,55,42,4],[42,56,41,2],[42,61,43,7],[43,0,44,4,"RNFetchBlobSession"],[43,34,44,23,"setSession"],[43,44,44,4],[43,45,44,34,"name"],[43,49,44,4],[43,51,44,40],[43,53,44,4],[45,0,45,4],[45,13,45,11],[45,17,45,15,"RNFetchBlobSession"],[45,44,45,11],[45,45,45,34,"name"],[45,49,45,11],[45,51,45,40],[45,53,45,11],[45,54,45,4],[46,0,46,3],[47,0,47,1],[49,0,49,0],[49,11,49,9,"asset"],[49,16,49,0],[49,17,49,15,"path"],[49,21,49,0],[49,23,49,37],[50,0,50,2],[50,8,50,6,"Platform"],[50,30,50,15,"OS"],[50,32,50,6],[50,37,50,22],[50,42,50,2],[50,44,50,29],[51,0,52,4],[51,10,52,8],[51,34,52,32,"test"],[51,38,52,8],[51,39,52,37,"path"],[51,43,52,8],[51,44,52,4],[51,46,53,6],[51,53,53,13,"path"],[51,57,53,6],[52,0,54,3],[54,0,55,2],[54,11,55,9],[54,32,55,30,"path"],[54,36,55,2],[55,0,56,1],[57,0,58,0],[57,11,58,9,"createFile"],[57,21,58,0],[57,22,58,20,"path"],[57,26,58,0],[57,28,58,34,"data"],[57,32,58,0],[57,34,58,113],[58,0,58,113],[58,8,58,48,"encoding"],[58,16,58,113],[58,87,58,88],[58,93,58,113],[60,0,59,2],[60,8,59,6,"encoding"],[60,16,59,14],[60,17,59,15,"toLowerCase"],[60,28,59,6],[60,35,59,33],[60,42,59,2],[60,44,59,42],[61,0,60,4],[61,13,60,11,"Array"],[61,18,60,16],[61,19,60,17,"isArray"],[61,26,60,11],[61,27,60,25,"data"],[61,31,60,11],[61,35,61,6,"RNFetchBlob"],[61,46,61,17],[61,47,61,18,"createFileASCII"],[61,62,61,6],[61,63,61,34,"path"],[61,67,61,6],[61,69,61,40,"data"],[61,73,61,6],[61,74,60,11],[61,77,62,6,"Promise"],[61,84,62,13],[61,85,62,14,"reject"],[61,91,62,6],[61,92,62,21,"addCode"],[61,99,62,28],[61,100,62,29],[61,108,62,28],[61,110,62,39],[61,114,62,43,"TypeError"],[61,123,62,39],[61,124,62,53],[61,183,62,39],[61,184,62,28],[61,185,62,6],[61,186,60,4],[62,0,63,3],[62,5,59,2],[62,11,64,7],[63,0,65,4],[63,13,65,11,"RNFetchBlob"],[63,24,65,22],[63,25,65,23,"createFile"],[63,35,65,11],[63,36,65,34,"path"],[63,40,65,11],[63,42,65,40,"data"],[63,46,65,11],[63,48,65,46,"encoding"],[63,56,65,11],[63,57,65,4],[64,0,66,3],[65,0,67,1],[67,0,76,0],[67,11,76,9,"writeStream"],[67,22,76,0],[67,23,77,2,"path"],[67,27,76,0],[67,29,80,35],[68,0,80,35],[68,8,78,2,"encoding"],[68,16,80,35],[68,87,78,43],[68,93,80,35],[69,0,80,35],[69,8,79,2,"append"],[69,14,80,35],[69,85,79,21],[69,90,80,35],[71,0,81,2],[71,8,81,6],[71,15,81,13,"path"],[71,19,81,6],[71,24,81,22],[71,32,81,2],[71,34,81,32],[72,0,82,4],[72,13,82,11,"Promise"],[72,20,82,18],[72,21,82,19,"reject"],[72,27,82,11],[72,28,82,26,"addCode"],[72,35,82,33],[72,36,82,34],[72,44,82,33],[72,46,82,44],[72,50,82,48,"TypeError"],[72,59,82,44],[72,60,82,58],[72,86,82,44],[72,87,82,33],[72,88,82,11],[72,89,82,4],[73,0,83,3],[75,0,84,2],[75,11,84,9],[75,15,84,13,"Promise"],[75,22,84,9],[75,23,84,21],[75,33,84,22,"resolve"],[75,40,84,21],[75,42,84,31,"reject"],[75,48,84,21],[75,50,84,42],[76,0,85,4,"RNFetchBlob"],[76,6,85,4,"RNFetchBlob"],[76,17,85,15],[76,18,85,16,"writeStream"],[76,29,85,4],[76,30,85,28,"path"],[76,34,85,4],[76,36,85,34,"encoding"],[76,44,85,4],[76,46,85,44,"append"],[76,52,85,4],[76,54,85,52],[76,64,85,53,"errCode"],[76,71,85,52],[76,73,85,62,"errMsg"],[76,79,85,52],[76,81,85,70,"streamId"],[76,89,85,52],[76,91,85,91],[77,0,86,6],[77,12,86,10,"errMsg"],[77,18,86,6],[77,20,86,18],[78,0,87,8],[78,14,87,14,"err"],[78,17,87,17],[78,20,87,20],[78,24,87,24,"Error"],[78,29,87,20],[78,30,87,30,"errMsg"],[78,36,87,20],[78,37,87,8],[79,0,88,8,"err"],[79,10,88,8,"err"],[79,13,88,11],[79,14,88,12,"code"],[79,18,88,8],[79,21,88,19,"errCode"],[79,28,88,8],[80,0,89,8,"reject"],[80,10,89,8,"reject"],[80,16,89,14],[80,17,89,15,"err"],[80,20,89,14],[80,21,89,8],[81,0,90,7],[81,9,86,6],[81,15,92,8,"resolve"],[81,22,92,15],[81,23,92,16],[81,27,92,20,"RNFetchBlobWriteStream"],[81,58,92,16],[81,59,92,43,"streamId"],[81,67,92,16],[81,69,92,53,"encoding"],[81,77,92,16],[81,78,92,15],[81,79,92,8],[82,0,93,5],[82,7,85,4],[83,0,94,3],[83,5,84,9],[83,6,84,2],[84,0,95,1],[86,0,105,0],[86,11,105,9,"readStream"],[86,21,105,0],[86,22,106,2,"path"],[86,26,105,0],[86,28,110,34],[87,0,110,34],[87,8,107,2,"encoding"],[87,16,110,34],[87,87,107,42],[87,93,110,34],[88,0,110,34],[88,8,108,2,"bufferSize"],[88,18,110,34],[89,0,110,34],[89,8,109,2,"tick"],[89,12,110,34],[89,83,109,18],[89,85,110,34],[91,0,111,2],[91,8,111,6],[91,15,111,13,"path"],[91,19,111,6],[91,24,111,22],[91,32,111,2],[91,34,111,32],[92,0,112,4],[92,13,112,11,"Promise"],[92,20,112,18],[92,21,112,19,"reject"],[92,27,112,11],[92,28,112,26,"addCode"],[92,35,112,33],[92,36,112,34],[92,44,112,33],[92,46,112,44],[92,50,112,48,"TypeError"],[92,59,112,44],[92,60,112,58],[92,86,112,44],[92,87,112,33],[92,88,112,11],[92,89,112,4],[93,0,113,3],[95,0,114,2],[95,11,114,9,"Promise"],[95,18,114,16],[95,19,114,17,"resolve"],[95,26,114,9],[95,27,114,25],[95,31,114,29,"RNFetchBlobReadStream"],[95,61,114,25],[95,62,114,51,"path"],[95,66,114,25],[95,68,114,57,"encoding"],[95,76,114,25],[95,78,114,67,"bufferSize"],[95,88,114,25],[95,90,114,79,"tick"],[95,94,114,25],[95,95,114,9],[95,96,114,2],[96,0,115,1],[98,0,122,0],[98,11,122,9,"mkdir"],[98,16,122,0],[98,17,122,15,"path"],[98,21,122,0],[98,23,122,38],[99,0,123,2],[99,8,123,6],[99,15,123,13,"path"],[99,19,123,6],[99,24,123,22],[99,32,123,2],[99,34,123,32],[100,0,124,4],[100,13,124,11,"Promise"],[100,20,124,18],[100,21,124,19,"reject"],[100,27,124,11],[100,28,124,26,"addCode"],[100,35,124,33],[100,36,124,34],[100,44,124,33],[100,46,124,44],[100,50,124,48,"TypeError"],[100,59,124,44],[100,60,124,58],[100,86,124,44],[100,87,124,33],[100,88,124,11],[100,89,124,4],[101,0,125,3],[103,0,126,2],[103,11,126,9,"RNFetchBlob"],[103,22,126,20],[103,23,126,21,"mkdir"],[103,28,126,9],[103,29,126,27,"path"],[103,33,126,9],[103,34,126,2],[104,0,127,1],[106,0,134,0],[106,11,134,9,"pathForAppGroup"],[106,26,134,0],[106,27,134,25,"groupName"],[106,36,134,0],[106,38,134,53],[107,0,135,2],[107,11,135,9,"RNFetchBlob"],[107,22,135,20],[107,23,135,21,"pathForAppGroup"],[107,38,135,9],[107,39,135,37,"groupName"],[107,48,135,9],[107,49,135,2],[108,0,136,1],[110,0,143,0],[110,11,143,9,"syncPathAppGroup"],[110,27,143,0],[110,28,143,26,"groupName"],[110,37,143,0],[110,39,143,53],[111,0,144,2],[111,8,144,6,"Platform"],[111,30,144,15,"OS"],[111,32,144,6],[111,37,144,22],[111,42,144,2],[111,44,144,29],[112,0,145,4],[112,13,145,11,"RNFetchBlob"],[112,24,145,22],[112,25,145,23,"syncPathAppGroup"],[112,41,145,11],[112,42,145,40,"groupName"],[112,51,145,11],[112,52,145,4],[113,0,146,3],[113,5,144,2],[113,11,146,9],[114,0,147,4],[114,13,147,11],[114,15,147,4],[115,0,148,3],[116,0,149,1],[118,0,157,0],[118,11,157,9,"readFile"],[118,19,157,0],[118,20,157,18,"path"],[118,24,157,0],[118,26,157,73],[119,0,157,73],[119,8,157,32,"encoding"],[119,16,157,73],[119,87,157,51],[119,93,157,73],[121,0,158,2],[121,8,158,6],[121,15,158,13,"path"],[121,19,158,6],[121,24,158,22],[121,32,158,2],[121,34,158,32],[122,0,159,4],[122,13,159,11,"Promise"],[122,20,159,18],[122,21,159,19,"reject"],[122,27,159,11],[122,28,159,26,"addCode"],[122,35,159,33],[122,36,159,34],[122,44,159,33],[122,46,159,44],[122,50,159,48,"TypeError"],[122,59,159,44],[122,60,159,58],[122,86,159,44],[122,87,159,33],[122,88,159,11],[122,89,159,4],[123,0,160,3],[125,0,161,2],[125,11,161,9,"RNFetchBlob"],[125,22,161,20],[125,23,161,21,"readFile"],[125,31,161,9],[125,32,161,30,"path"],[125,36,161,9],[125,38,161,36,"encoding"],[125,46,161,9],[125,47,161,2],[126,0,162,1],[128,0,171,0],[128,11,171,9,"writeFile"],[128,20,171,0],[128,21,171,19,"path"],[128,25,171,0],[128,27,171,33,"data"],[128,31,171,0],[128,33,171,100],[129,0,171,100],[129,8,171,63,"encoding"],[129,16,171,100],[129,87,171,83],[129,93,171,100],[131,0,172,2],[131,8,172,6],[131,15,172,13,"path"],[131,19,172,6],[131,24,172,22],[131,32,172,2],[131,34,172,32],[132,0,173,4],[132,13,173,11,"Promise"],[132,20,173,18],[132,21,173,19,"reject"],[132,27,173,11],[132,28,173,26,"addCode"],[132,35,173,33],[132,36,173,34],[132,44,173,33],[132,46,173,44],[132,50,173,48,"TypeError"],[132,59,173,44],[132,60,173,58],[132,86,173,44],[132,87,173,33],[132,88,173,11],[132,89,173,4],[133,0,174,3],[135,0,175,2],[135,8,175,6,"encoding"],[135,16,175,14],[135,17,175,15,"toLocaleLowerCase"],[135,34,175,6],[135,41,175,39],[135,48,175,2],[135,50,175,48],[136,0,176,4],[136,10,176,8],[136,11,176,9,"Array"],[136,16,176,14],[136,17,176,15,"isArray"],[136,24,176,9],[136,25,176,23,"data"],[136,29,176,9],[136,30,176,4],[136,32,176,30],[137,0,177,6],[137,15,177,13,"Promise"],[137,22,177,20],[137,23,177,21,"reject"],[137,29,177,13],[137,30,177,28,"addCode"],[137,37,177,35],[137,38,177,36],[137,46,177,35],[137,48,177,46],[137,52,177,50,"TypeError"],[137,61,177,46],[137,62,177,60],[137,112,177,46],[137,113,177,35],[137,114,177,13],[137,115,177,6],[138,0,178,5],[138,7,176,4],[138,13,180,6],[138,20,180,13,"RNFetchBlob"],[138,31,180,24],[138,32,180,25,"writeFileArray"],[138,46,180,13],[138,47,180,40,"path"],[138,51,180,13],[138,53,180,46,"data"],[138,57,180,13],[138,59,180,52],[138,64,180,13],[138,65,180,6],[139,0,181,3],[139,5,175,2],[139,11,182,7],[140,0,183,4],[140,10,183,8],[140,17,183,15,"data"],[140,21,183,8],[140,26,183,24],[140,34,183,4],[140,36,183,34],[141,0,184,6],[141,15,184,13,"Promise"],[141,22,184,20],[141,23,184,21,"reject"],[141,29,184,13],[141,30,184,28,"addCode"],[141,37,184,35],[141,38,184,36],[141,46,184,35],[141,48,184,46],[141,52,184,50,"TypeError"],[141,61,184,46],[141,146,184,135],[141,153,184,142,"data"],[141,157,184,46],[141,165,184,35],[141,166,184,13],[141,167,184,6],[142,0,185,5],[142,7,183,4],[142,13,187,6],[142,20,187,13,"RNFetchBlob"],[142,31,187,24],[142,32,187,25,"writeFile"],[142,41,187,13],[142,42,187,35,"path"],[142,46,187,13],[142,48,187,41,"encoding"],[142,56,187,13],[142,58,187,51,"data"],[142,62,187,13],[142,64,187,57],[142,69,187,13],[142,70,187,6],[143,0,188,3],[144,0,189,1],[146,0,191,0],[146,11,191,9,"appendFile"],[146,21,191,0],[146,22,191,20,"path"],[146,26,191,0],[146,28,191,34,"data"],[146,32,191,0],[146,34,191,109],[147,0,191,109],[147,8,191,64,"encoding"],[147,16,191,109],[147,87,191,84],[147,93,191,109],[149,0,192,2],[149,8,192,6],[149,15,192,13,"path"],[149,19,192,6],[149,24,192,22],[149,32,192,2],[149,34,192,32],[150,0,193,4],[150,13,193,11,"Promise"],[150,20,193,18],[150,21,193,19,"reject"],[150,27,193,11],[150,28,193,26,"addCode"],[150,35,193,33],[150,36,193,34],[150,44,193,33],[150,46,193,44],[150,50,193,48,"TypeError"],[150,59,193,44],[150,60,193,58],[150,86,193,44],[150,87,193,33],[150,88,193,11],[150,89,193,4],[151,0,194,3],[153,0,195,2],[153,8,195,6,"encoding"],[153,16,195,14],[153,17,195,15,"toLocaleLowerCase"],[153,34,195,6],[153,41,195,39],[153,48,195,2],[153,50,195,48],[154,0,196,4],[154,10,196,8],[154,11,196,9,"Array"],[154,16,196,14],[154,17,196,15,"isArray"],[154,24,196,9],[154,25,196,23,"data"],[154,29,196,9],[154,30,196,4],[154,32,196,30],[155,0,197,6],[155,15,197,13,"Promise"],[155,22,197,20],[155,23,197,21,"reject"],[155,29,197,13],[155,30,197,28,"addCode"],[155,37,197,35],[155,38,197,36],[155,46,197,35],[155,48,197,46],[155,52,197,50,"TypeError"],[155,61,197,46],[155,62,197,60],[155,121,197,46],[155,122,197,35],[155,123,197,13],[155,124,197,6],[156,0,198,5],[156,7,196,4],[156,13,200,6],[156,20,200,13,"RNFetchBlob"],[156,31,200,24],[156,32,200,25,"writeFileArray"],[156,46,200,13],[156,47,200,40,"path"],[156,51,200,13],[156,53,200,46,"data"],[156,57,200,13],[156,59,200,52],[156,63,200,13],[156,64,200,6],[157,0,201,3],[157,5,195,2],[157,11,202,7],[158,0,203,4],[158,10,203,8],[158,17,203,15,"data"],[158,21,203,8],[158,26,203,24],[158,34,203,4],[158,36,203,34],[159,0,204,6],[159,15,204,13,"Promise"],[159,22,204,20],[159,23,204,21,"reject"],[159,29,204,13],[159,30,204,28,"addCode"],[159,37,204,35],[159,38,204,36],[159,46,204,35],[159,47,204,13],[159,49,204,47],[159,53,204,51,"TypeError"],[159,62,204,47],[159,147,204,136],[159,154,204,143,"data"],[159,158,204,47],[159,166,204,13],[159,167,204,6],[160,0,205,5],[160,7,203,4],[160,13,207,6],[160,20,207,13,"RNFetchBlob"],[160,31,207,24],[160,32,207,25,"writeFile"],[160,41,207,13],[160,42,207,35,"path"],[160,46,207,13],[160,48,207,41,"encoding"],[160,56,207,13],[160,58,207,51,"data"],[160,62,207,13],[160,64,207,57],[160,68,207,13],[160,69,207,6],[161,0,208,3],[162,0,209,1],[164,0,216,0],[164,11,216,9,"stat"],[164,15,216,0],[164,16,216,14,"path"],[164,20,216,0],[164,22,216,54],[165,0,217,2],[165,11,217,9],[165,15,217,13,"Promise"],[165,22,217,9],[165,23,217,21],[165,33,217,22,"resolve"],[165,40,217,21],[165,42,217,31,"reject"],[165,48,217,21],[165,50,217,42],[166,0,218,4],[166,10,218,8],[166,17,218,15,"path"],[166,21,218,8],[166,26,218,24],[166,34,218,4],[166,36,218,34],[167,0,219,6],[167,15,219,13,"reject"],[167,21,219,19],[167,22,219,20,"addCode"],[167,29,219,27],[167,30,219,28],[167,38,219,27],[167,40,219,38],[167,44,219,42,"TypeError"],[167,53,219,38],[167,54,219,52],[167,80,219,38],[167,81,219,27],[167,82,219,19],[167,83,219,6],[168,0,220,5],[170,0,221,4,"RNFetchBlob"],[170,6,221,4,"RNFetchBlob"],[170,17,221,15],[170,18,221,16,"stat"],[170,22,221,4],[170,23,221,21,"path"],[170,27,221,4],[170,29,221,27],[170,39,221,28,"err"],[170,42,221,27],[170,44,221,33,"stat"],[170,48,221,27],[170,50,221,42],[171,0,222,6],[171,12,222,10,"err"],[171,15,222,6],[171,17,223,8,"reject"],[171,23,223,14],[171,24,223,15],[171,28,223,19,"Error"],[171,33,223,15],[171,34,223,25,"err"],[171,37,223,15],[171,38,223,14],[171,39,223,8],[171,40,222,6],[171,45,224,11],[172,0,225,8],[172,14,225,12,"stat"],[172,18,225,8],[172,20,225,18],[173,0,226,10,"stat"],[173,12,226,10,"stat"],[173,16,226,14],[173,17,226,15,"size"],[173,21,226,10],[173,24,226,22,"parseInt"],[173,32,226,30],[173,33,226,31,"stat"],[173,37,226,35],[173,38,226,36,"size"],[173,42,226,30],[173,43,226,10],[174,0,227,10,"stat"],[174,12,227,10,"stat"],[174,16,227,14],[174,17,227,15,"lastModified"],[174,29,227,10],[174,32,227,30,"parseInt"],[174,40,227,38],[174,41,227,39,"stat"],[174,45,227,43],[174,46,227,44,"lastModified"],[174,58,227,38],[174,59,227,10],[175,0,228,9],[177,0,229,8,"resolve"],[177,10,229,8,"resolve"],[177,17,229,15],[177,18,229,16,"stat"],[177,22,229,15],[177,23,229,8],[178,0,230,7],[179,0,231,5],[179,7,221,4],[180,0,232,3],[180,5,217,9],[180,6,217,2],[181,0,233,1],[183,0,240,0],[183,11,240,9,"scanFile"],[183,19,240,0],[183,20,240,18,"pairs"],[183,25,240,0],[183,27,240,39],[184,0,241,2],[184,11,241,9],[184,15,241,13,"Promise"],[184,22,241,9],[184,23,241,21],[184,33,241,22,"resolve"],[184,40,241,21],[184,42,241,31,"reject"],[184,48,241,21],[184,50,241,42],[185,0,242,4],[185,10,242,8,"pairs"],[185,15,242,13],[185,20,242,18,"undefined"],[185,29,242,4],[185,31,242,29],[186,0,243,6],[186,15,243,13,"reject"],[186,21,243,19],[186,22,243,20,"addCode"],[186,29,243,27],[186,30,243,28],[186,38,243,27],[186,40,243,38],[186,44,243,42,"TypeError"],[186,53,243,38],[186,54,243,52],[186,72,243,38],[186,73,243,27],[186,74,243,19],[186,75,243,6],[187,0,244,5],[189,0,245,4,"RNFetchBlob"],[189,6,245,4,"RNFetchBlob"],[189,17,245,15],[189,18,245,16,"scanFile"],[189,26,245,4],[189,27,245,25,"pairs"],[189,32,245,4],[189,34,245,32],[189,44,245,33,"err"],[189,47,245,32],[189,49,245,41],[190,0,246,6],[190,12,246,10,"err"],[190,15,246,6],[190,17,247,8,"reject"],[190,23,247,14],[190,24,247,15,"addCode"],[190,31,247,22],[190,32,247,23],[190,46,247,22],[190,48,247,39],[190,52,247,43,"Error"],[190,57,247,39],[190,58,247,49,"err"],[190,61,247,39],[190,62,247,22],[190,63,247,14],[190,64,247,8],[190,65,246,6],[190,70,249,8,"resolve"],[190,77,249,15],[191,0,250,5],[191,7,245,4],[192,0,251,3],[192,5,241,9],[192,6,241,2],[193,0,252,1],[195,0,254,0],[195,11,254,9,"hash"],[195,15,254,0],[195,16,254,14,"path"],[195,20,254,0],[195,22,254,28,"algorithm"],[195,31,254,0],[195,33,254,64],[196,0,255,2],[196,8,255,6],[196,15,255,13,"path"],[196,19,255,6],[196,24,255,22],[196,32,255,6],[196,36,255,34],[196,43,255,41,"algorithm"],[196,52,255,34],[196,57,255,55],[196,65,255,2],[196,67,255,65],[197,0,256,4],[197,13,256,11,"Promise"],[197,20,256,18],[197,21,256,19,"reject"],[197,27,256,11],[197,28,256,26,"addCode"],[197,35,256,33],[197,36,256,34],[197,44,256,33],[197,46,256,44],[197,50,256,48,"TypeError"],[197,59,256,44],[197,60,256,58],[197,104,256,44],[197,105,256,33],[197,106,256,11],[197,107,256,4],[198,0,257,3],[200,0,258,2],[200,11,258,9,"RNFetchBlob"],[200,22,258,20],[200,23,258,21,"hash"],[200,27,258,9],[200,28,258,26,"path"],[200,32,258,9],[200,34,258,32,"algorithm"],[200,43,258,9],[200,44,258,2],[201,0,259,1],[203,0,261,0],[203,11,261,9,"cp"],[203,13,261,0],[203,14,261,12,"path"],[203,18,261,0],[203,20,261,26,"dest"],[203,24,261,0],[203,26,261,58],[204,0,262,2],[204,11,262,9],[204,15,262,13,"Promise"],[204,22,262,9],[204,23,262,21],[204,33,262,22,"resolve"],[204,40,262,21],[204,42,262,31,"reject"],[204,48,262,21],[204,50,262,42],[205,0,263,4],[205,10,263,8],[205,17,263,15,"path"],[205,21,263,8],[205,26,263,24],[205,34,263,8],[205,38,263,36],[205,45,263,43,"dest"],[205,49,263,36],[205,54,263,52],[205,62,263,4],[205,64,263,62],[206,0,264,6],[206,15,264,13,"reject"],[206,21,264,19],[206,22,264,20,"addCode"],[206,29,264,27],[206,30,264,28],[206,38,264,27],[206,40,264,38],[206,44,264,42,"TypeError"],[206,53,264,38],[206,54,264,52],[206,100,264,38],[206,101,264,27],[206,102,264,19],[206,103,264,6],[207,0,265,5],[209,0,266,4,"RNFetchBlob"],[209,6,266,4,"RNFetchBlob"],[209,17,266,15],[209,18,266,16,"cp"],[209,20,266,4],[209,21,266,19,"path"],[209,25,266,4],[209,27,266,25,"dest"],[209,31,266,4],[209,33,266,31],[209,43,266,32,"err"],[209,46,266,31],[209,48,266,37,"res"],[209,51,266,31],[209,53,266,45],[210,0,267,6],[210,12,267,10,"err"],[210,15,267,6],[210,17,268,8,"reject"],[210,23,268,14],[210,24,268,15,"addCode"],[210,31,268,22],[210,32,268,23],[210,46,268,22],[210,48,268,39],[210,52,268,43,"Error"],[210,57,268,39],[210,58,268,49,"err"],[210,61,268,39],[210,62,268,22],[210,63,268,14],[210,64,268,8],[210,65,267,6],[210,70,270,8,"resolve"],[210,77,270,15],[210,78,270,16,"res"],[210,81,270,15],[210,82,270,8],[211,0,271,5],[211,7,266,4],[212,0,272,3],[212,5,262,9],[212,6,262,2],[213,0,273,1],[215,0,275,0],[215,11,275,9,"mv"],[215,13,275,0],[215,14,275,12,"path"],[215,18,275,0],[215,20,275,26,"dest"],[215,24,275,0],[215,26,275,58],[216,0,276,2],[216,11,276,9],[216,15,276,13,"Promise"],[216,22,276,9],[216,23,276,21],[216,33,276,22,"resolve"],[216,40,276,21],[216,42,276,31,"reject"],[216,48,276,21],[216,50,276,42],[217,0,277,4],[217,10,277,8],[217,17,277,15,"path"],[217,21,277,8],[217,26,277,24],[217,34,277,8],[217,38,277,36],[217,45,277,43,"dest"],[217,49,277,36],[217,54,277,52],[217,62,277,4],[217,64,277,62],[218,0,278,6],[218,15,278,13,"reject"],[218,21,278,19],[218,22,278,20,"addCode"],[218,29,278,27],[218,30,278,28],[218,38,278,27],[218,40,278,38],[218,44,278,42,"TypeError"],[218,53,278,38],[218,54,278,52],[218,100,278,38],[218,101,278,27],[218,102,278,19],[218,103,278,6],[219,0,279,5],[221,0,280,4,"RNFetchBlob"],[221,6,280,4,"RNFetchBlob"],[221,17,280,15],[221,18,280,16,"mv"],[221,20,280,4],[221,21,280,19,"path"],[221,25,280,4],[221,27,280,25,"dest"],[221,31,280,4],[221,33,280,31],[221,43,280,32,"err"],[221,46,280,31],[221,48,280,37,"res"],[221,51,280,31],[221,53,280,45],[222,0,281,6],[222,12,281,10,"err"],[222,15,281,6],[222,17,282,8,"reject"],[222,23,282,14],[222,24,282,15,"addCode"],[222,31,282,22],[222,32,282,23],[222,46,282,22],[222,48,282,39],[222,52,282,43,"Error"],[222,57,282,39],[222,58,282,49,"err"],[222,61,282,39],[222,62,282,22],[222,63,282,14],[222,64,282,8],[222,65,281,6],[222,70,284,8,"resolve"],[222,77,284,15],[222,78,284,16,"res"],[222,81,284,15],[222,82,284,8],[223,0,285,5],[223,7,280,4],[224,0,286,3],[224,5,276,9],[224,6,276,2],[225,0,287,1],[227,0,289,0],[227,11,289,9,"lstat"],[227,16,289,0],[227,17,289,15,"path"],[227,21,289,0],[227,23,289,62],[228,0,290,2],[228,11,290,9],[228,15,290,13,"Promise"],[228,22,290,9],[228,23,290,21],[228,33,290,22,"resolve"],[228,40,290,21],[228,42,290,31,"reject"],[228,48,290,21],[228,50,290,42],[229,0,291,4],[229,10,291,8],[229,17,291,15,"path"],[229,21,291,8],[229,26,291,24],[229,34,291,4],[229,36,291,34],[230,0,292,6],[230,15,292,13,"reject"],[230,21,292,19],[230,22,292,20,"addCode"],[230,29,292,27],[230,30,292,28],[230,38,292,27],[230,40,292,38],[230,44,292,42,"TypeError"],[230,53,292,38],[230,54,292,52],[230,80,292,38],[230,81,292,27],[230,82,292,19],[230,83,292,6],[231,0,293,5],[233,0,294,4,"RNFetchBlob"],[233,6,294,4,"RNFetchBlob"],[233,17,294,15],[233,18,294,16,"lstat"],[233,23,294,4],[233,24,294,22,"path"],[233,28,294,4],[233,30,294,28],[233,40,294,29,"err"],[233,43,294,28],[233,45,294,34,"stat"],[233,49,294,28],[233,51,294,43],[234,0,295,6],[234,12,295,10,"err"],[234,15,295,6],[234,17,296,8,"reject"],[234,23,296,14],[234,24,296,15,"addCode"],[234,31,296,22],[234,32,296,23],[234,46,296,22],[234,48,296,39],[234,52,296,43,"Error"],[234,57,296,39],[234,58,296,49,"err"],[234,61,296,39],[234,62,296,22],[234,63,296,14],[234,64,296,8],[234,65,295,6],[234,70,298,8,"resolve"],[234,77,298,15],[234,78,298,16,"stat"],[234,82,298,15],[234,83,298,8],[235,0,299,5],[235,7,294,4],[236,0,300,3],[236,5,290,9],[236,6,290,2],[237,0,301,1],[239,0,303,0],[239,11,303,9,"ls"],[239,13,303,0],[239,14,303,12,"path"],[239,18,303,0],[239,20,303,50],[240,0,304,2],[240,8,304,6],[240,15,304,13,"path"],[240,19,304,6],[240,24,304,22],[240,32,304,2],[240,34,304,32],[241,0,305,4],[241,13,305,11,"Promise"],[241,20,305,18],[241,21,305,19,"reject"],[241,27,305,11],[241,28,305,26,"addCode"],[241,35,305,33],[241,36,305,34],[241,44,305,33],[241,46,305,44],[241,50,305,48,"TypeError"],[241,59,305,44],[241,60,305,58],[241,86,305,44],[241,87,305,33],[241,88,305,11],[241,89,305,4],[242,0,306,3],[244,0,307,2],[244,11,307,9,"RNFetchBlob"],[244,22,307,20],[244,23,307,21,"ls"],[244,25,307,9],[244,26,307,24,"path"],[244,30,307,9],[244,31,307,2],[245,0,308,1],[247,0,315,0],[247,11,315,9,"unlink"],[247,17,315,0],[247,18,315,16,"path"],[247,22,315,0],[247,24,315,39],[248,0,316,2],[248,11,316,9],[248,15,316,13,"Promise"],[248,22,316,9],[248,23,316,21],[248,33,316,22,"resolve"],[248,40,316,21],[248,42,316,31,"reject"],[248,48,316,21],[248,50,316,42],[249,0,317,4],[249,10,317,8],[249,17,317,15,"path"],[249,21,317,8],[249,26,317,24],[249,34,317,4],[249,36,317,34],[250,0,318,6],[250,15,318,13,"reject"],[250,21,318,19],[250,22,318,20,"addCode"],[250,29,318,27],[250,30,318,28],[250,38,318,27],[250,40,318,38],[250,44,318,42,"TypeError"],[250,53,318,38],[250,54,318,52],[250,80,318,38],[250,81,318,27],[250,82,318,19],[250,83,318,6],[251,0,319,5],[253,0,320,4,"RNFetchBlob"],[253,6,320,4,"RNFetchBlob"],[253,17,320,15],[253,18,320,16,"unlink"],[253,24,320,4],[253,25,320,23,"path"],[253,29,320,4],[253,31,320,29],[253,41,320,30,"err"],[253,44,320,29],[253,46,320,38],[254,0,321,6],[254,12,321,10,"err"],[254,15,321,6],[254,17,321,15],[255,0,322,8,"reject"],[255,10,322,8,"reject"],[255,16,322,14],[255,17,322,15,"addCode"],[255,24,322,22],[255,25,322,23],[255,39,322,22],[255,41,322,39],[255,45,322,43,"Error"],[255,50,322,39],[255,51,322,49,"err"],[255,54,322,39],[255,55,322,22],[255,56,322,14],[255,57,322,8],[256,0,323,7],[256,9,321,6],[256,15,325,8,"resolve"],[256,22,325,15],[257,0,326,5],[257,7,320,4],[258,0,327,3],[258,5,316,9],[258,6,316,2],[259,0,328,1],[261,0,335,0],[261,11,335,9,"exists"],[261,17,335,0],[261,18,335,16,"path"],[261,22,335,0],[261,24,335,48],[262,0,336,2],[262,11,336,9],[262,15,336,13,"Promise"],[262,22,336,9],[262,23,336,21],[262,33,336,22,"resolve"],[262,40,336,21],[262,42,336,31,"reject"],[262,48,336,21],[262,50,336,42],[263,0,337,4],[263,10,337,8],[263,17,337,15,"path"],[263,21,337,8],[263,26,337,24],[263,34,337,4],[263,36,337,34],[264,0,338,6],[264,15,338,13,"reject"],[264,21,338,19],[264,22,338,20,"addCode"],[264,29,338,27],[264,30,338,28],[264,38,338,27],[264,40,338,38],[264,44,338,42,"TypeError"],[264,53,338,38],[264,54,338,52],[264,80,338,38],[264,81,338,27],[264,82,338,19],[264,83,338,6],[265,0,339,5],[267,0,340,4],[267,10,340,8],[268,0,341,6,"RNFetchBlob"],[268,8,341,6,"RNFetchBlob"],[268,19,341,17],[268,20,341,18,"exists"],[268,26,341,6],[268,27,341,25,"path"],[268,31,341,6],[268,33,341,31],[268,43,341,32,"exist"],[268,48,341,31],[268,50,341,42],[269,0,342,8,"resolve"],[269,10,342,8,"resolve"],[269,17,342,15],[269,18,342,16,"exist"],[269,23,342,15],[269,24,342,8],[270,0,343,7],[270,9,341,6],[271,0,344,5],[271,7,340,4],[271,8,344,5],[271,15,344,12,"err"],[271,18,344,5],[271,20,344,16],[272,0,345,6,"reject"],[272,8,345,6,"reject"],[272,14,345,12],[272,15,345,13,"addCode"],[272,22,345,20],[272,23,345,21],[272,37,345,20],[272,39,345,37],[272,43,345,41,"Error"],[272,48,345,37],[272,49,345,47,"err"],[272,52,345,37],[272,53,345,20],[272,54,345,12],[272,55,345,6],[273,0,346,5],[274,0,347,3],[274,5,336,9],[274,6,336,2],[275,0,349,1],[277,0,351,0],[277,11,351,9,"slice"],[277,16,351,0],[277,17,351,15,"src"],[277,20,351,0],[277,22,351,28,"dest"],[277,26,351,0],[277,28,351,42,"start"],[277,33,351,0],[277,35,351,57,"end"],[277,38,351,0],[277,40,351,79],[278,0,352,2],[278,8,352,6],[278,15,352,13,"src"],[278,18,352,6],[278,23,352,21],[278,31,352,6],[278,35,352,33],[278,42,352,40,"dest"],[278,46,352,33],[278,51,352,49],[278,59,352,2],[278,61,352,59],[279,0,353,4],[279,13,353,11,"reject"],[279,19,353,17],[279,20,353,18,"addCode"],[279,27,353,25],[279,28,353,26],[279,36,353,25],[279,38,353,36],[279,42,353,40,"TypeError"],[279,51,353,36],[279,52,353,50],[279,97,353,36],[279,98,353,25],[279,99,353,17],[279,100,353,4],[280,0,354,3],[282,0,356,2],[282,8,356,6,"p"],[282,9,356,7],[282,12,356,10,"Promise"],[282,19,356,17],[282,20,356,18,"resolve"],[282,27,356,10],[282,29,356,2],[283,0,357,2],[283,8,357,6,"size"],[283,12,357,10],[283,15,357,13],[283,16,357,2],[285,0,359,2],[285,13,359,11,"normalize"],[285,22,359,2],[285,23,359,21,"num"],[285,26,359,2],[285,28,359,26,"size"],[285,32,359,2],[285,34,359,32],[286,0,360,4],[286,10,360,8,"num"],[286,13,360,11],[286,16,360,14],[286,17,360,4],[286,19,361,6],[286,26,361,13,"Math"],[286,30,361,17],[286,31,361,18,"max"],[286,34,361,13],[286,35,361,22],[286,36,361,13],[286,38,361,25,"size"],[286,42,361,29],[286,45,361,32,"num"],[286,48,361,13],[286,49,361,6],[287,0,362,4],[287,10,362,8],[287,11,362,9,"num"],[287,14,362,8],[287,18,362,16,"num"],[287,21,362,19],[287,26,362,24],[287,27,362,4],[287,29,363,6],[287,36,363,13,"size"],[287,40,363,6],[288,0,364,4],[288,13,364,11,"num"],[288,16,364,4],[289,0,365,3],[291,0,367,2],[291,8,367,6,"start"],[291,13,367,11],[291,16,367,14],[291,17,367,6],[291,21,367,19,"end"],[291,24,367,22],[291,27,367,25],[291,28,367,6],[291,32,367,30],[291,33,367,31,"start"],[291,38,367,6],[291,42,367,40],[291,43,367,41,"end"],[291,46,367,2],[291,48,367,46],[292,0,368,4,"p"],[292,6,368,4,"p"],[292,7,368,5],[292,10,368,8,"p"],[292,11,368,9],[292,12,368,10,"then"],[292,16,368,8],[292,17,368,15],[293,0,368,15],[293,15,368,21,"stat"],[293,19,368,25],[293,20,368,26,"src"],[293,23,368,25],[293,24,368,15],[294,0,368,15],[294,7,368,8],[294,9,369,7,"then"],[294,13,368,8],[294,14,369,12],[294,24,369,13,"stat"],[294,28,369,12],[294,30,369,22],[295,0,370,8,"size"],[295,8,370,8,"size"],[295,12,370,12],[295,15,370,15,"Math"],[295,19,370,19],[295,20,370,20,"floor"],[295,25,370,15],[295,26,370,26,"stat"],[295,30,370,30],[295,31,370,31,"size"],[295,35,370,15],[295,36,370,8],[296,0,371,8,"start"],[296,8,371,8,"start"],[296,13,371,13],[296,16,371,16,"normalize"],[296,25,371,25],[296,26,371,26,"start"],[296,31,371,31],[296,35,371,35],[296,36,371,25],[296,38,371,38,"size"],[296,42,371,25],[296,43,371,8],[297,0,372,8,"end"],[297,8,372,8,"end"],[297,11,372,11],[297,14,372,14,"normalize"],[297,23,372,23],[297,24,372,24,"end"],[297,27,372,23],[297,29,372,29,"size"],[297,33,372,23],[297,34,372,8],[298,0,373,7],[298,7,368,8],[298,8,368,4],[299,0,374,3],[301,0,375,2],[301,11,375,9,"p"],[301,12,375,10],[301,13,375,11,"then"],[301,17,375,9],[301,18,375,16],[302,0,375,16],[302,13,375,22,"RNFetchBlob"],[302,24,375,33],[302,25,375,34,"slice"],[302,30,375,22],[302,31,375,40,"src"],[302,34,375,22],[302,36,375,45,"dest"],[302,40,375,22],[302,42,375,51,"start"],[302,47,375,22],[302,49,375,58,"end"],[302,52,375,22],[302,53,375,16],[303,0,375,16],[303,5,375,9],[303,6,375,2],[304,0,376,1],[306,0,378,0],[306,11,378,9,"isDir"],[306,16,378,0],[306,17,378,15,"path"],[306,21,378,0],[306,23,378,44],[307,0,379,2],[307,11,379,9],[307,15,379,13,"Promise"],[307,22,379,9],[307,23,379,21],[307,33,379,22,"resolve"],[307,40,379,21],[307,42,379,31,"reject"],[307,48,379,21],[307,50,379,42],[308,0,380,4],[308,10,380,8],[308,17,380,15,"path"],[308,21,380,8],[308,26,380,24],[308,34,380,4],[308,36,380,34],[309,0,381,6],[309,15,381,13,"reject"],[309,21,381,19],[309,22,381,20,"addCode"],[309,29,381,27],[309,30,381,28],[309,38,381,27],[309,40,381,38],[309,44,381,42,"TypeError"],[309,53,381,38],[309,54,381,52],[309,80,381,38],[309,81,381,27],[309,82,381,19],[309,83,381,6],[310,0,382,5],[312,0,383,4],[312,10,383,8],[313,0,384,6,"RNFetchBlob"],[313,8,384,6,"RNFetchBlob"],[313,19,384,17],[313,20,384,18,"exists"],[313,26,384,6],[313,27,384,25,"path"],[313,31,384,6],[313,33,384,31],[313,43,384,32,"exist"],[313,48,384,31],[313,50,384,39,"isDir"],[313,55,384,31],[313,57,384,49],[314,0,385,8,"resolve"],[314,10,385,8,"resolve"],[314,17,385,15],[314,18,385,16,"isDir"],[314,23,385,15],[314,24,385,8],[315,0,386,7],[315,9,384,6],[316,0,387,5],[316,7,383,4],[316,8,387,5],[316,15,387,12,"err"],[316,18,387,5],[316,20,387,16],[317,0,388,6,"reject"],[317,8,388,6,"reject"],[317,14,388,12],[317,15,388,13,"addCode"],[317,22,388,20],[317,23,388,21],[317,37,388,20],[317,39,388,37],[317,43,388,41,"Error"],[317,48,388,37],[317,49,388,47,"err"],[317,52,388,37],[317,53,388,20],[317,54,388,12],[317,55,388,6],[318,0,389,5],[319,0,390,3],[319,5,379,9],[319,6,379,2],[320,0,392,1],[322,0,394,0],[322,11,394,9,"df"],[322,13,394,0],[322,16,394,56],[323,0,395,2],[323,11,395,9],[323,15,395,13,"Promise"],[323,22,395,9],[323,23,395,21],[323,33,395,22,"resolve"],[323,40,395,21],[323,42,395,31,"reject"],[323,48,395,21],[323,50,395,42],[324,0,396,4,"RNFetchBlob"],[324,6,396,4,"RNFetchBlob"],[324,17,396,15],[324,18,396,16,"df"],[324,20,396,4],[324,21,396,19],[324,31,396,20,"err"],[324,34,396,19],[324,36,396,25,"stat"],[324,40,396,19],[324,42,396,34],[325,0,397,6],[325,12,397,10,"err"],[325,15,397,6],[325,17,398,8,"reject"],[325,23,398,14],[325,24,398,15,"addCode"],[325,31,398,22],[325,32,398,23],[325,46,398,22],[325,48,398,39],[325,52,398,43,"Error"],[325,57,398,39],[325,58,398,49,"err"],[325,61,398,39],[325,62,398,22],[325,63,398,14],[325,64,398,8],[325,65,397,6],[325,70,400,8,"resolve"],[325,77,400,15],[325,78,400,16,"stat"],[325,82,400,15],[325,83,400,8],[326,0,401,5],[326,7,396,4],[327,0,402,3],[327,5,395,9],[327,6,395,2],[328,0,403,1],[330,17,405,15],[331,0,406,2,"RNFetchBlobSession"],[331,4,406,2,"RNFetchBlobSession"],[331,22,406,20],[331,24,406,2,"RNFetchBlobSession"],[331,51,405,15],[332,0,407,2,"unlink"],[332,4,407,2,"unlink"],[332,10,407,8],[332,12,407,2,"unlink"],[332,18,405,15],[333,0,408,2,"mkdir"],[333,4,408,2,"mkdir"],[333,9,408,7],[333,11,408,2,"mkdir"],[333,16,405,15],[334,0,409,2,"session"],[334,4,409,2,"session"],[334,11,409,9],[334,13,409,2,"session"],[334,20,405,15],[335,0,410,2,"ls"],[335,4,410,2,"ls"],[335,6,410,4],[335,8,410,2,"ls"],[335,10,405,15],[336,0,411,2,"readStream"],[336,4,411,2,"readStream"],[336,14,411,12],[336,16,411,2,"readStream"],[336,26,405,15],[337,0,412,2,"mv"],[337,4,412,2,"mv"],[337,6,412,4],[337,8,412,2,"mv"],[337,10,405,15],[338,0,413,2,"cp"],[338,4,413,2,"cp"],[338,6,413,4],[338,8,413,2,"cp"],[338,10,405,15],[339,0,414,2,"writeStream"],[339,4,414,2,"writeStream"],[339,15,414,13],[339,17,414,2,"writeStream"],[339,28,405,15],[340,0,415,2,"writeFile"],[340,4,415,2,"writeFile"],[340,13,415,11],[340,15,415,2,"writeFile"],[340,24,405,15],[341,0,416,2,"appendFile"],[341,4,416,2,"appendFile"],[341,14,416,12],[341,16,416,2,"appendFile"],[341,26,405,15],[342,0,417,2,"pathForAppGroup"],[342,4,417,2,"pathForAppGroup"],[342,19,417,17],[342,21,417,2,"pathForAppGroup"],[342,36,405,15],[343,0,418,2,"syncPathAppGroup"],[343,4,418,2,"syncPathAppGroup"],[343,20,418,18],[343,22,418,2,"syncPathAppGroup"],[343,38,405,15],[344,0,419,2,"readFile"],[344,4,419,2,"readFile"],[344,12,419,10],[344,14,419,2,"readFile"],[344,22,405,15],[345,0,420,2,"hash"],[345,4,420,2,"hash"],[345,8,420,6],[345,10,420,2,"hash"],[345,14,405,15],[346,0,421,2,"exists"],[346,4,421,2,"exists"],[346,10,421,8],[346,12,421,2,"exists"],[346,18,405,15],[347,0,422,2,"createFile"],[347,4,422,2,"createFile"],[347,14,422,12],[347,16,422,2,"createFile"],[347,26,405,15],[348,0,423,2,"isDir"],[348,4,423,2,"isDir"],[348,9,423,7],[348,11,423,2,"isDir"],[348,16,405,15],[349,0,424,2,"stat"],[349,4,424,2,"stat"],[349,8,424,6],[349,10,424,2,"stat"],[349,14,405,15],[350,0,425,2,"lstat"],[350,4,425,2,"lstat"],[350,9,425,7],[350,11,425,2,"lstat"],[350,16,405,15],[351,0,426,2,"scanFile"],[351,4,426,2,"scanFile"],[351,12,426,10],[351,14,426,2,"scanFile"],[351,22,405,15],[352,0,427,2,"dirs"],[352,4,427,2,"dirs"],[352,8,427,6],[352,10,427,2,"dirs"],[352,14,405,15],[353,0,428,2,"slice"],[353,4,428,2,"slice"],[353,9,428,7],[353,11,428,2,"slice"],[353,16,405,15],[354,0,429,2,"asset"],[354,4,429,2,"asset"],[354,9,429,7],[354,11,429,2,"asset"],[354,16,405,15],[355,0,430,2,"df"],[355,4,430,2,"df"],[355,6,430,4],[355,8,430,2,"df"],[356,0,405,15],[356,3]],"functionMap":{"names":["<global>","addCode","session","asset","createFile","writeStream","Promise$argument_0","RNFetchBlob.writeStream$argument_3","readStream","mkdir","pathForAppGroup","syncPathAppGroup","readFile","writeFile","appendFile","stat","RNFetchBlob.stat$argument_1","scanFile","RNFetchBlob.scanFile$argument_1","hash","cp","RNFetchBlob.cp$argument_2","mv","RNFetchBlob.mv$argument_2","lstat","RNFetchBlob.lstat$argument_1","ls","unlink","RNFetchBlob.unlink$argument_1","exists","RNFetchBlob.exists$argument_1","slice","normalize","p.then$argument_0","p.then.then$argument_0","isDir","df","RNFetchBlob.df$argument_0"],"mappings":"AAA;AC4B;CDG;AEO;CFQ;AGE;CHO;AIE;CJS;AKS;qBCQ;oDCC;KDQ;GDC;CLC;AQU;CRU;ASO;CTK;AUO;CVE;AWO;CXM;AYQ;CZK;AaS;CbkB;AcE;CdkB;AeO;qBTC;2BUI;KVU;GSC;CfC;AiBO;qBXC;gCYI;KZK;GWC;CjBC;AmBE;CnBK;AoBE;qBdC;+BeI;KfK;GcC;CpBC;AsBE;qBhBC;+BiBI;KjBK;GgBC;CtBC;AwBE;qBlBC;4BmBI;KnBK;GkBC;CxBC;A0BE;C1BK;A2BO;qBrBC;6BsBI;KtBM;GqBC;C3BC;A6BO;qBvBC;+BwBK;OxBE;GuBI;C7BE;A+BE;ECQ;GDM;eEG,eF;YGC;OHI;gBEE,8CF;C/BC;AmCE;qB7BC;+BwBK;OxBE;G6BI;CnCE;AoCE;qB9BC;mB+BC;K/BK;G8BC;CpCC"}},"type":"js/module"}]}