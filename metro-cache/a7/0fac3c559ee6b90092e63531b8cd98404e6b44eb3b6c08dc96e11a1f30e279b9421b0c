{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./MapMarker","data":{"isAsync":false}},{"name":"./MapPolyline","data":{"isAsync":false}},{"name":"./MapPolygon","data":{"isAsync":false}},{"name":"./MapCircle","data":{"isAsync":false}},{"name":"./MapCallout","data":{"isAsync":false}},{"name":"./MapCalloutSubview","data":{"isAsync":false}},{"name":"./MapOverlay","data":{"isAsync":false}},{"name":"./MapUrlTile","data":{"isAsync":false}},{"name":"./MapWMSTile","data":{"isAsync":false}},{"name":"./MapLocalTile","data":{"isAsync":false}},{"name":"./MapHeatmap","data":{"isAsync":false}},{"name":"./AnimatedRegion","data":{"isAsync":false}},{"name":"./decorateMapComponent","data":{"isAsync":false}},{"name":"./ProviderConstants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.ProviderPropType = exports.Animated = exports.MAP_TYPES = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"prop-types\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[14], \"react-native\");\n\n  var _MapMarker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./MapMarker\"));\n\n  var _MapPolyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./MapPolyline\"));\n\n  var _MapPolygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./MapPolygon\"));\n\n  var _MapCircle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./MapCircle\"));\n\n  var _MapCallout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./MapCallout\"));\n\n  var _MapCalloutSubview = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./MapCalloutSubview\"));\n\n  var _MapOverlay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./MapOverlay\"));\n\n  var _MapUrlTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./MapUrlTile\"));\n\n  var _MapWMSTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./MapWMSTile\"));\n\n  var _MapLocalTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./MapLocalTile\"));\n\n  var _MapHeatmap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./MapHeatmap\"));\n\n  var _AnimatedRegion = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./AnimatedRegion\"));\n\n  var _decorateMapComponent = _$$_REQUIRE(_dependencyMap[27], \"./decorateMapComponent\");\n\n  var ProviderConstants = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[28], \"./ProviderConstants\"));\n\n  var _jsxFileName = \"/home/groofl/VijaySingh/HopAssitUser/node_modules/react-native-maps/lib/components/MapView.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var MAP_TYPES = {\n    STANDARD: 'standard',\n    SATELLITE: 'satellite',\n    HYBRID: 'hybrid',\n    TERRAIN: 'terrain',\n    NONE: 'none',\n    MUTEDSTANDARD: 'mutedStandard'\n  };\n  exports.MAP_TYPES = MAP_TYPES;\n  var GOOGLE_MAPS_ONLY_TYPES = [MAP_TYPES.TERRAIN, MAP_TYPES.NONE];\n  var viewConfig = {\n    uiViewClassName: 'AIR<provider>Map',\n    validAttributes: {\n      region: true\n    }\n  };\n\n  var CameraShape = _propTypes.default.shape({\n    center: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired\n    }),\n    pitch: _propTypes.default.number.isRequired,\n    heading: _propTypes.default.number.isRequired,\n    altitude: _propTypes.default.number.isRequired,\n    zoom: _propTypes.default.number.isRequired\n  });\n\n  var viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\n\n  var propTypes = _objectSpread({}, viewPropTypes, {\n    provider: _propTypes.default.oneOf(['google']),\n    style: viewPropTypes.style,\n    customMapStyle: _propTypes.default.array,\n    customMapStyleString: _propTypes.default.string,\n    showsUserLocation: _propTypes.default.bool,\n    userLocationAnnotationTitle: _propTypes.default.string,\n    showsMyLocationButton: _propTypes.default.bool,\n    followsUserLocation: _propTypes.default.bool,\n    showsPointsOfInterest: _propTypes.default.bool,\n    showsCompass: _propTypes.default.bool,\n    zoomEnabled: _propTypes.default.bool,\n    zoomTapEnabled: _propTypes.default.bool,\n    zoomControlEnabled: _propTypes.default.bool,\n    rotateEnabled: _propTypes.default.bool,\n    cacheEnabled: _propTypes.default.bool,\n    loadingEnabled: _propTypes.default.bool,\n    loadingBackgroundColor: _reactNative.ColorPropType,\n    loadingIndicatorColor: _reactNative.ColorPropType,\n    scrollEnabled: _propTypes.default.bool,\n    pitchEnabled: _propTypes.default.bool,\n    toolbarEnabled: _propTypes.default.bool,\n    moveOnMarkerPress: _propTypes.default.bool,\n    showsScale: _propTypes.default.bool,\n    showsBuildings: _propTypes.default.bool,\n    showsTraffic: _propTypes.default.bool,\n    showsIndoors: _propTypes.default.bool,\n    showsIndoorLevelPicker: _propTypes.default.bool,\n    mapType: _propTypes.default.oneOf(Object.values(MAP_TYPES)),\n    region: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    initialRegion: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    camera: CameraShape,\n    initialCamera: CameraShape,\n    liteMode: _propTypes.default.bool,\n    mapPadding: _reactNative.EdgeInsetsPropType,\n    paddingAdjustmentBehavior: _propTypes.default.oneOf(['always', 'automatic', 'never']),\n    maxDelta: _propTypes.default.number,\n    minDelta: _propTypes.default.number,\n    legalLabelInsets: _reactNative.EdgeInsetsPropType,\n    onMapReady: _propTypes.default.func,\n    onMapLoaded: _propTypes.default.func,\n    onKmlReady: _propTypes.default.func,\n    onRegionChange: _propTypes.default.func,\n    onRegionChangeComplete: _propTypes.default.func,\n    onPress: _propTypes.default.func,\n    onDoublePress: _propTypes.default.func,\n    onLongPress: _propTypes.default.func,\n    onUserLocationChange: _propTypes.default.func,\n    onPanDrag: _propTypes.default.func,\n    onPoiClick: _propTypes.default.func,\n    onMarkerPress: _propTypes.default.func,\n    onMarkerSelect: _propTypes.default.func,\n    onMarkerDeselect: _propTypes.default.func,\n    onCalloutPress: _propTypes.default.func,\n    onMarkerDragStart: _propTypes.default.func,\n    onMarkerDrag: _propTypes.default.func,\n    onMarkerDragEnd: _propTypes.default.func,\n    minZoomLevel: _propTypes.default.number,\n    maxZoomLevel: _propTypes.default.number,\n    kmlSrc: _propTypes.default.string,\n    compassOffset: _reactNative.PointPropType,\n    onIndoorLevelActivated: _propTypes.default.func,\n    onIndoorBuildingFocused: _propTypes.default.func\n  });\n\n  var MapView = function (_React$Component) {\n    (0, _inherits2.default)(MapView, _React$Component);\n\n    function MapView(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapView);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MapView).call(this, props));\n      _this.state = {\n        isReady: _reactNative.Platform.OS === 'ios'\n      };\n      _this._onMapReady = _this._onMapReady.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onMarkerPress = _this._onMarkerPress.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onLayout = _this._onLayout.bind((0, _assertThisInitialized2.default)(_this));\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapView, [{\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        return {\n          provider: this.props.provider\n        };\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate(prevProps) {\n        if (this.state.isReady && this.props.customMapStyle !== prevProps.customMapStyle) {\n          this._updateStyle(this.props);\n        }\n\n        return this.props.region || null;\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, prevState, region) {\n        var a = this.__lastRegion;\n        var b = region;\n\n        if (!a || !b) {\n          return;\n        }\n\n        if (a.latitude !== b.latitude || a.longitude !== b.longitude || a.latitudeDelta !== b.latitudeDelta || a.longitudeDelta !== b.longitudeDelta) {\n          this.map.setNativeProps({\n            region: b\n          });\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isReady = this.state.isReady;\n\n        if (isReady) {\n          this._updateStyle(this.props);\n        }\n      }\n    }, {\n      key: \"_updateStyle\",\n      value: function _updateStyle(props) {\n        var customMapStyle = props.customMapStyle;\n        this.map.setNativeProps({\n          customMapStyleString: JSON.stringify(customMapStyle)\n        });\n      }\n    }, {\n      key: \"_onMapReady\",\n      value: function _onMapReady() {\n        var _this$props = this.props,\n            region = _this$props.region,\n            initialRegion = _this$props.initialRegion,\n            onMapReady = _this$props.onMapReady;\n\n        if (region) {\n          this.map.setNativeProps({\n            region: region\n          });\n        } else if (initialRegion) {\n          this.map.setNativeProps({\n            initialRegion: initialRegion\n          });\n        }\n\n        this._updateStyle(this.props);\n\n        this.setState({\n          isReady: true\n        }, function () {\n          if (onMapReady) {\n            onMapReady();\n          }\n        });\n      }\n    }, {\n      key: \"_onLayout\",\n      value: function _onLayout(e) {\n        var layout = e.nativeEvent.layout;\n\n        if (!layout.width || !layout.height) {\n          return;\n        }\n\n        if (this.state.isReady && !this.__layoutCalled) {\n          var _this$props2 = this.props,\n              region = _this$props2.region,\n              initialRegion = _this$props2.initialRegion;\n\n          if (region) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              region: region\n            });\n          } else if (initialRegion) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              initialRegion: initialRegion\n            });\n          }\n        }\n\n        if (this.props.onLayout) {\n          this.props.onLayout(e);\n        }\n      }\n    }, {\n      key: \"_onMarkerPress\",\n      value: function _onMarkerPress(event) {\n        if (this.props.onMarkerPress) {\n          this.props.onMarkerPress(event.nativeEvent);\n        }\n      }\n    }, {\n      key: \"_onChange\",\n      value: function _onChange(event) {\n        this.__lastRegion = event.nativeEvent.region;\n\n        if (event.nativeEvent.continuous) {\n          if (this.props.onRegionChange) {\n            this.props.onRegionChange(event.nativeEvent.region);\n          }\n        } else if (this.props.onRegionChangeComplete) {\n          this.props.onRegionChangeComplete(event.nativeEvent.region);\n        }\n      }\n    }, {\n      key: \"getCamera\",\n      value: function getCamera() {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.getCamera(this._getHandle());\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('getCamera', []);\n        }\n\n        return Promise.reject('getCamera not supported on this platform');\n      }\n    }, {\n      key: \"setCamera\",\n      value: function setCamera(camera) {\n        this._runCommand('setCamera', [camera]);\n      }\n    }, {\n      key: \"animateCamera\",\n      value: function animateCamera(camera, opts) {\n        this._runCommand('animateCamera', [camera, opts && opts.duration || 500]);\n      }\n    }, {\n      key: \"animateToNavigation\",\n      value: function animateToNavigation(location, bearing, angle, duration) {\n        console.warn('animateToNavigation() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToNavigation', [location, bearing, angle, duration || 500]);\n      }\n    }, {\n      key: \"animateToRegion\",\n      value: function animateToRegion(region, duration) {\n        this._runCommand('animateToRegion', [region, duration || 500]);\n      }\n    }, {\n      key: \"animateToCoordinate\",\n      value: function animateToCoordinate(latLng, duration) {\n        console.warn('animateToCoordinate() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToCoordinate', [latLng, duration || 500]);\n      }\n    }, {\n      key: \"animateToBearing\",\n      value: function animateToBearing(bearing, duration) {\n        console.warn('animateToBearing() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToBearing', [bearing, duration || 500]);\n      }\n    }, {\n      key: \"animateToViewingAngle\",\n      value: function animateToViewingAngle(angle, duration) {\n        console.warn('animateToViewingAngle() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToViewingAngle', [angle, duration || 500]);\n      }\n    }, {\n      key: \"fitToElements\",\n      value: function fitToElements(animated) {\n        this._runCommand('fitToElements', [animated]);\n      }\n    }, {\n      key: \"fitToSuppliedMarkers\",\n      value: function fitToSuppliedMarkers(markers) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding = options.edgePadding,\n            edgePadding = _options$edgePadding === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding,\n            _options$animated = options.animated,\n            animated = _options$animated === void 0 ? true : _options$animated;\n\n        this._runCommand('fitToSuppliedMarkers', [markers, edgePadding, animated]);\n      }\n    }, {\n      key: \"fitToCoordinates\",\n      value: function fitToCoordinates() {\n        var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding2 = options.edgePadding,\n            edgePadding = _options$edgePadding2 === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding2,\n            _options$animated2 = options.animated,\n            animated = _options$animated2 === void 0 ? true : _options$animated2;\n\n        this._runCommand('fitToCoordinates', [coordinates, edgePadding, animated]);\n      }\n    }, {\n      key: \"getMapBoundaries\",\n      value: function getMapBoundaries() {\n        return _regenerator.default.async(function getMapBoundaries$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_reactNative.Platform.OS === 'android')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.NativeModules.AirMapModule.getMapBoundaries(this._getHandle()));\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                if (!(_reactNative.Platform.OS === 'ios')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 9;\n                return _regenerator.default.awrap(this._runCommand('getMapBoundaries', []));\n\n              case 9:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 10:\n                return _context.abrupt(\"return\", Promise.reject('getMapBoundaries not supported on this platform'));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setMapBoundaries\",\n      value: function setMapBoundaries(northEast, southWest) {\n        this._runCommand('setMapBoundaries', [northEast, southWest]);\n      }\n    }, {\n      key: \"setIndoorActiveLevelIndex\",\n      value: function setIndoorActiveLevelIndex(activeLevelIndex) {\n        this._runCommand('setIndoorActiveLevelIndex', [activeLevelIndex]);\n      }\n    }, {\n      key: \"takeSnapshot\",\n      value: function takeSnapshot(args) {\n        var _this2 = this;\n\n        if (_reactNative.Platform.OS === 'ios' && arguments.length === 4) {\n          console.warn('Old takeSnapshot API has been deprecated; will be removed in the near future');\n          var width = arguments[0];\n          var height = arguments[1];\n          var region = arguments[2];\n          var callback = arguments[3];\n\n          this._runCommand('takeSnapshot', [width || 0, height || 0, region || {}, 'png', 1, 'legacy', callback]);\n\n          return undefined;\n        }\n\n        var config = {\n          width: args.width || 0,\n          height: args.height || 0,\n          region: args.region || {},\n          format: args.format || 'png',\n          quality: args.quality || 1.0,\n          result: args.result || 'file'\n        };\n\n        if (config.format !== 'png' && config.format !== 'jpg') {\n          throw new Error('Invalid format specified');\n        }\n\n        if (config.result !== 'file' && config.result !== 'base64') {\n          throw new Error('Invalid result specified');\n        }\n\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.takeSnapshot(this._getHandle(), config);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return new Promise(function (resolve, reject) {\n            _this2._runCommand('takeSnapshot', [config.width, config.height, config.region, config.format, config.quality, config.result, function (err, snapshot) {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(snapshot);\n              }\n            }]);\n          });\n        }\n\n        return Promise.reject('takeSnapshot not supported on this platform');\n      }\n    }, {\n      key: \"pointForCoordinate\",\n      value: function pointForCoordinate(coordinate) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.pointForCoordinate(this._getHandle(), coordinate);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('pointForCoordinate', [coordinate]);\n        }\n\n        return Promise.reject('pointForCoordinate not supported on this platform');\n      }\n    }, {\n      key: \"coordinateForPoint\",\n      value: function coordinateForPoint(point) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.coordinateForPoint(this._getHandle(), point);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('coordinateForPoint', [point]);\n        }\n\n        return Promise.reject('coordinateForPoint not supported on this platform');\n      }\n    }, {\n      key: \"getMarkersFrames\",\n      value: function getMarkersFrames() {\n        var onlyVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('getMarkersFrames', [onlyVisible]);\n        }\n\n        return Promise.reject('getMarkersFrames not supported on this platform');\n      }\n    }, {\n      key: \"boundingBoxForRegion\",\n      value: function boundingBoxForRegion(region) {\n        return {\n          northEast: {\n            latitude: region.latitude + region.latitudeDelta / 2,\n            longitude: region.longitude + region.longitudeDelta / 2\n          },\n          southWest: {\n            latitude: region.latitude - region.latitudeDelta / 2,\n            longitude: region.longitude - region.longitudeDelta / 2\n          }\n        };\n      }\n    }, {\n      key: \"_uiManagerCommand\",\n      value: function _uiManagerCommand(name) {\n        var UIManager = _reactNative.NativeModules.UIManager;\n        var componentName = (0, _decorateMapComponent.getAirMapName)(this.props.provider);\n\n        if (!UIManager.getViewManagerConfig) {\n          return UIManager[componentName].Commands[name];\n        }\n\n        return UIManager.getViewManagerConfig(componentName).Commands[name];\n      }\n    }, {\n      key: \"_mapManagerCommand\",\n      value: function _mapManagerCommand(name) {\n        var managerName = (0, _decorateMapComponent.getAirMapName)(this.props.provider);\n\n        if (managerName === 'UI') {\n          var UIManager = _reactNative.NativeModules.UIManager;\n\n          if (!UIManager.getViewManagerConfig) {\n            return UIManager[name];\n          }\n\n          return UIManager.getViewManagerConfig(name);\n        }\n\n        return _reactNative.NativeModules[(0, _decorateMapComponent.getAirMapName)(this.props.provider) + \"Manager\"][name];\n      }\n    }, {\n      key: \"_getHandle\",\n      value: function _getHandle() {\n        return (0, _reactNative.findNodeHandle)(this.map);\n      }\n    }, {\n      key: \"_runCommand\",\n      value: function _runCommand(name, args) {\n        switch (_reactNative.Platform.OS) {\n          case 'android':\n            return _reactNative.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(), this._uiManagerCommand(name), args);\n\n          case 'ios':\n            return this._mapManagerCommand(name).apply(void 0, [this._getHandle()].concat((0, _toConsumableArray2.default)(args)));\n\n          default:\n            return Promise.reject(\"Invalid platform was passed: \" + _reactNative.Platform.OS);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var props;\n\n        if (this.state.isReady) {\n          props = _objectSpread({\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          }, this.props);\n\n          if (_reactNative.Platform.OS === 'ios' && props.provider === ProviderConstants.PROVIDER_DEFAULT && GOOGLE_MAPS_ONLY_TYPES.includes(props.mapType)) {\n            props.mapType = MAP_TYPES.standard;\n          }\n\n          props.handlePanDrag = !!props.onPanDrag;\n        } else {\n          props = {\n            style: this.props.style,\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          };\n        }\n\n        if (_reactNative.Platform.OS === 'android' && this.props.liteMode) {\n          return _react.default.createElement(AIRMapLite, (0, _extends2.default)({\n            ref: function ref(_ref) {\n              _this3.map = _ref;\n            }\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 981\n            }\n          }));\n        }\n\n        var AIRMap = getAirMapComponent(this.props.provider);\n        return _react.default.createElement(AIRMap, (0, _extends2.default)({\n          ref: function ref(_ref2) {\n            _this3.map = _ref2;\n          }\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 993\n          }\n        }));\n      }\n    }]);\n    return MapView;\n  }(_react.default.Component);\n\n  MapView.propTypes = propTypes;\n  MapView.viewConfig = viewConfig;\n  MapView.childContextTypes = _decorateMapComponent.contextTypes;\n  MapView.MAP_TYPES = MAP_TYPES;\n\n  var nativeComponent = function nativeComponent(Component) {\n    return (0, _reactNative.requireNativeComponent)(Component, MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        onKmlReady: true,\n        handlePanDrag: true\n      }\n    });\n  };\n\n  var airMaps = {\n    default: nativeComponent('AIRMap')\n  };\n\n  if (_reactNative.Platform.OS === 'android') {\n    airMaps.google = airMaps.default;\n  } else {\n    airMaps.google = _decorateMapComponent.googleMapIsInstalled ? nativeComponent('AIRGoogleMap') : (0, _decorateMapComponent.createNotSupportedComponent)('react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.');\n  }\n\n  var getAirMapComponent = function getAirMapComponent(provider) {\n    return airMaps[provider || 'default'];\n  };\n\n  var AIRMapLite;\n\n  if (!_reactNative.NativeModules.UIManager.getViewManagerConfig) {\n    AIRMapLite = _reactNative.NativeModules.UIManager.AIRMapLite && (0, _reactNative.requireNativeComponent)('AIRMapLite', MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        handlePanDrag: true\n      }\n    });\n  } else {\n    AIRMapLite = _reactNative.NativeModules.UIManager.getViewManagerConfig('AIRMapLite') && (0, _reactNative.requireNativeComponent)('AIRMapLite', MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        handlePanDrag: true\n      }\n    });\n  }\n\n  var Animated = _reactNative.Animated.createAnimatedComponent(MapView);\n\n  exports.Animated = Animated;\n\n  var ProviderPropType = _propTypes.default.oneOf(Object.values(ProviderConstants));\n\n  exports.ProviderPropType = ProviderPropType;\n  MapView.Marker = _MapMarker.default;\n  MapView.Polyline = _MapPolyline.default;\n  MapView.Polygon = _MapPolygon.default;\n  MapView.Circle = _MapCircle.default;\n  MapView.UrlTile = _MapUrlTile.default;\n  MapView.MapWMSTile = _MapWMSTile.default;\n  MapView.LocalTile = _MapLocalTile.default;\n  MapView.Heatmap = _MapHeatmap.default;\n  MapView.Overlay = _MapOverlay.default;\n  MapView.Callout = _MapCallout.default;\n  MapView.CalloutSubview = _MapCalloutSubview.default;\n  (0, _extends2.default)(MapView, ProviderConstants);\n  MapView.ProviderPropType = ProviderPropType;\n  MapView.Animated = Animated;\n  MapView.AnimatedRegion = _AnimatedRegion.default;\n  var _default = MapView;\n  exports.default = _default;\n});","lineCount":746,"map":[[31,0,1,0],[33,0,2,0],[35,0,3,0],[37,0,15,0],[39,0,16,0],[41,0,17,0],[43,0,18,0],[45,0,19,0],[47,0,20,0],[49,0,21,0],[51,0,22,0],[53,0,23,0],[55,0,24,0],[57,0,25,0],[59,0,26,0],[61,0,27,0],[63,0,33,0],[71,0,35,7],[71,6,35,13,"MAP_TYPES"],[71,15,35,22],[71,18,35,25],[72,0,36,2,"STANDARD"],[72,4,36,2,"STANDARD"],[72,12,36,10],[72,14,36,12],[72,24,35,25],[73,0,37,2,"SATELLITE"],[73,4,37,2,"SATELLITE"],[73,13,37,11],[73,15,37,13],[73,26,35,25],[74,0,38,2,"HYBRID"],[74,4,38,2,"HYBRID"],[74,10,38,8],[74,12,38,10],[74,20,35,25],[75,0,39,2,"TERRAIN"],[75,4,39,2,"TERRAIN"],[75,11,39,9],[75,13,39,11],[75,22,35,25],[76,0,40,2,"NONE"],[76,4,40,2,"NONE"],[76,8,40,6],[76,10,40,8],[76,16,35,25],[77,0,41,2,"MUTEDSTANDARD"],[77,4,41,2,"MUTEDSTANDARD"],[77,17,41,15],[77,19,41,17],[78,0,35,25],[78,3,35,7],[80,0,44,0],[80,6,44,6,"GOOGLE_MAPS_ONLY_TYPES"],[80,28,44,28],[80,31,44,31],[80,32,44,32,"MAP_TYPES"],[80,41,44,41],[80,42,44,42,"TERRAIN"],[80,49,44,31],[80,51,44,51,"MAP_TYPES"],[80,60,44,60],[80,61,44,61,"NONE"],[80,65,44,31],[80,66,44,0],[81,0,46,0],[81,6,46,6,"viewConfig"],[81,16,46,16],[81,19,46,19],[82,0,47,2,"uiViewClassName"],[82,4,47,2,"uiViewClassName"],[82,19,47,17],[82,21,47,19],[82,39,46,19],[83,0,48,2,"validAttributes"],[83,4,48,2,"validAttributes"],[83,19,48,17],[83,21,48,19],[84,0,49,4,"region"],[84,6,49,4,"region"],[84,12,49,10],[84,14,49,12],[85,0,48,19],[86,0,46,19],[86,3,46,0],[88,0,56,0],[88,6,56,6,"CameraShape"],[88,17,56,17],[88,20,56,20,"PropTypes"],[88,39,56,30,"shape"],[88,44,56,20],[88,45,56,36],[89,0,57,2,"center"],[89,4,57,2,"center"],[89,10,57,8],[89,12,57,10,"PropTypes"],[89,31,57,20,"shape"],[89,36,57,10],[89,37,57,26],[90,0,58,4,"latitude"],[90,6,58,4,"latitude"],[90,14,58,12],[90,16,58,14,"PropTypes"],[90,35,58,24,"number"],[90,41,58,14],[90,42,58,31,"isRequired"],[90,52,57,26],[91,0,59,4,"longitude"],[91,6,59,4,"longitude"],[91,15,59,13],[91,17,59,15,"PropTypes"],[91,36,59,25,"number"],[91,42,59,15],[91,43,59,32,"isRequired"],[92,0,57,26],[92,5,57,10],[92,6,56,36],[93,0,61,2,"pitch"],[93,4,61,2,"pitch"],[93,9,61,7],[93,11,61,9,"PropTypes"],[93,30,61,19,"number"],[93,36,61,9],[93,37,61,26,"isRequired"],[93,47,56,36],[94,0,62,2,"heading"],[94,4,62,2,"heading"],[94,11,62,9],[94,13,62,11,"PropTypes"],[94,32,62,21,"number"],[94,38,62,11],[94,39,62,28,"isRequired"],[94,49,56,36],[95,0,63,2,"altitude"],[95,4,63,2,"altitude"],[95,12,63,10],[95,14,63,12,"PropTypes"],[95,33,63,22,"number"],[95,39,63,12],[95,40,63,29,"isRequired"],[95,50,56,36],[96,0,64,2,"zoom"],[96,4,64,2,"zoom"],[96,8,64,6],[96,10,64,8,"PropTypes"],[96,29,64,18,"number"],[96,35,64,8],[96,36,64,25,"isRequired"],[97,0,56,36],[97,3,56,20],[97,4,56,0],[99,0,68,0],[99,6,68,6,"viewPropTypes"],[99,19,68,19],[99,22,68,22,"ViewPropTypes"],[99,52,68,39,"View"],[99,70,68,44,"propTypes"],[99,79,68,0],[101,0,70,0],[101,6,70,6,"propTypes"],[101,15,70,15],[101,36,71,5,"viewPropTypes"],[101,49,70,15],[102,0,77,2,"provider"],[102,4,77,2,"provider"],[102,12,77,10],[102,14,77,12,"PropTypes"],[102,33,77,22,"oneOf"],[102,38,77,12],[102,39,77,28],[102,40,77,29],[102,48,77,28],[102,49,77,12],[102,50,70,15],[103,0,83,2,"style"],[103,4,83,2,"style"],[103,9,83,7],[103,11,83,9,"viewPropTypes"],[103,24,83,22],[103,25,83,23,"style"],[103,30,70,15],[104,0,91,2,"customMapStyle"],[104,4,91,2,"customMapStyle"],[104,18,91,16],[104,20,91,18,"PropTypes"],[104,39,91,28,"array"],[104,44,70,15],[105,0,98,2,"customMapStyleString"],[105,4,98,2,"customMapStyleString"],[105,24,98,22],[105,26,98,24,"PropTypes"],[105,45,98,34,"string"],[105,51,70,15],[106,0,110,2,"showsUserLocation"],[106,4,110,2,"showsUserLocation"],[106,21,110,19],[106,23,110,21,"PropTypes"],[106,42,110,31,"bool"],[106,46,70,15],[107,0,119,2,"userLocationAnnotationTitle"],[107,4,119,2,"userLocationAnnotationTitle"],[107,31,119,29],[107,33,119,31,"PropTypes"],[107,52,119,41,"string"],[107,58,70,15],[108,0,127,2,"showsMyLocationButton"],[108,4,127,2,"showsMyLocationButton"],[108,25,127,23],[108,27,127,25,"PropTypes"],[108,46,127,35,"bool"],[108,50,70,15],[109,0,136,2,"followsUserLocation"],[109,4,136,2,"followsUserLocation"],[109,23,136,21],[109,25,136,23,"PropTypes"],[109,44,136,33,"bool"],[109,48,70,15],[110,0,143,2,"showsPointsOfInterest"],[110,4,143,2,"showsPointsOfInterest"],[110,25,143,23],[110,27,143,25,"PropTypes"],[110,46,143,35,"bool"],[110,50,70,15],[111,0,151,2,"showsCompass"],[111,4,151,2,"showsCompass"],[111,16,151,14],[111,18,151,16,"PropTypes"],[111,37,151,26,"bool"],[111,41,70,15],[112,0,158,2,"zoomEnabled"],[112,4,158,2,"zoomEnabled"],[112,15,158,13],[112,17,158,15,"PropTypes"],[112,36,158,25,"bool"],[112,40,70,15],[113,0,166,2,"zoomTapEnabled"],[113,4,166,2,"zoomTapEnabled"],[113,18,166,16],[113,20,166,18,"PropTypes"],[113,39,166,28,"bool"],[113,43,70,15],[114,0,174,2,"zoomControlEnabled"],[114,4,174,2,"zoomControlEnabled"],[114,22,174,20],[114,24,174,22,"PropTypes"],[114,43,174,32,"bool"],[114,47,70,15],[115,0,181,2,"rotateEnabled"],[115,4,181,2,"rotateEnabled"],[115,17,181,15],[115,19,181,17,"PropTypes"],[115,38,181,27,"bool"],[115,42,70,15],[116,0,188,2,"cacheEnabled"],[116,4,188,2,"cacheEnabled"],[116,16,188,14],[116,18,188,16,"PropTypes"],[116,37,188,26,"bool"],[116,41,70,15],[117,0,195,2,"loadingEnabled"],[117,4,195,2,"loadingEnabled"],[117,18,195,16],[117,20,195,18,"PropTypes"],[117,39,195,28,"bool"],[117,43,70,15],[118,0,202,2,"loadingBackgroundColor"],[118,4,202,2,"loadingBackgroundColor"],[118,26,202,24],[118,28,202,26,"ColorPropType"],[118,54,70,15],[119,0,209,2,"loadingIndicatorColor"],[119,4,209,2,"loadingIndicatorColor"],[119,25,209,23],[119,27,209,25,"ColorPropType"],[119,53,70,15],[120,0,216,2,"scrollEnabled"],[120,4,216,2,"scrollEnabled"],[120,17,216,15],[120,19,216,17,"PropTypes"],[120,38,216,27,"bool"],[120,42,70,15],[121,0,223,2,"pitchEnabled"],[121,4,223,2,"pitchEnabled"],[121,16,223,14],[121,18,223,16,"PropTypes"],[121,37,223,26,"bool"],[121,41,70,15],[122,0,231,2,"toolbarEnabled"],[122,4,231,2,"toolbarEnabled"],[122,18,231,16],[122,20,231,18,"PropTypes"],[122,39,231,28,"bool"],[122,43,70,15],[123,0,239,2,"moveOnMarkerPress"],[123,4,239,2,"moveOnMarkerPress"],[123,21,239,19],[123,23,239,21,"PropTypes"],[123,42,239,31,"bool"],[123,46,70,15],[124,0,247,2,"showsScale"],[124,4,247,2,"showsScale"],[124,14,247,12],[124,16,247,14,"PropTypes"],[124,35,247,24,"bool"],[124,39,70,15],[125,0,253,2,"showsBuildings"],[125,4,253,2,"showsBuildings"],[125,18,253,16],[125,20,253,18,"PropTypes"],[125,39,253,28,"bool"],[125,43,70,15],[126,0,259,2,"showsTraffic"],[126,4,259,2,"showsTraffic"],[126,16,259,14],[126,18,259,16,"PropTypes"],[126,37,259,26,"bool"],[126,41,70,15],[127,0,267,2,"showsIndoors"],[127,4,267,2,"showsIndoors"],[127,16,267,14],[127,18,267,16,"PropTypes"],[127,37,267,26,"bool"],[127,41,70,15],[128,0,275,2,"showsIndoorLevelPicker"],[128,4,275,2,"showsIndoorLevelPicker"],[128,26,275,24],[128,28,275,26,"PropTypes"],[128,47,275,36,"bool"],[128,51,70,15],[129,0,286,2,"mapType"],[129,4,286,2,"mapType"],[129,11,286,9],[129,13,286,11,"PropTypes"],[129,32,286,21,"oneOf"],[129,37,286,11],[129,38,286,27,"Object"],[129,44,286,33],[129,45,286,34,"values"],[129,51,286,27],[129,52,286,41,"MAP_TYPES"],[129,61,286,27],[129,62,286,11],[129,63,70,15],[130,0,294,2,"region"],[130,4,294,2,"region"],[130,10,294,8],[130,12,294,10,"PropTypes"],[130,31,294,20,"shape"],[130,36,294,10],[130,37,294,26],[131,0,298,4,"latitude"],[131,6,298,4,"latitude"],[131,14,298,12],[131,16,298,14,"PropTypes"],[131,35,298,24,"number"],[131,41,298,14],[131,42,298,31,"isRequired"],[131,52,294,26],[132,0,299,4,"longitude"],[132,6,299,4,"longitude"],[132,15,299,13],[132,17,299,15,"PropTypes"],[132,36,299,25,"number"],[132,42,299,15],[132,43,299,32,"isRequired"],[132,53,294,26],[133,0,305,4,"latitudeDelta"],[133,6,305,4,"latitudeDelta"],[133,19,305,17],[133,21,305,19,"PropTypes"],[133,40,305,29,"number"],[133,46,305,19],[133,47,305,36,"isRequired"],[133,57,294,26],[134,0,306,4,"longitudeDelta"],[134,6,306,4,"longitudeDelta"],[134,20,306,18],[134,22,306,20,"PropTypes"],[134,41,306,30,"number"],[134,47,306,20],[134,48,306,37,"isRequired"],[135,0,294,26],[135,5,294,10],[135,6,70,15],[136,0,317,2,"initialRegion"],[136,4,317,2,"initialRegion"],[136,17,317,15],[136,19,317,17,"PropTypes"],[136,38,317,27,"shape"],[136,43,317,17],[136,44,317,33],[137,0,321,4,"latitude"],[137,6,321,4,"latitude"],[137,14,321,12],[137,16,321,14,"PropTypes"],[137,35,321,24,"number"],[137,41,321,14],[137,42,321,31,"isRequired"],[137,52,317,33],[138,0,322,4,"longitude"],[138,6,322,4,"longitude"],[138,15,322,13],[138,17,322,15,"PropTypes"],[138,36,322,25,"number"],[138,42,322,15],[138,43,322,32,"isRequired"],[138,53,317,33],[139,0,328,4,"latitudeDelta"],[139,6,328,4,"latitudeDelta"],[139,19,328,17],[139,21,328,19,"PropTypes"],[139,40,328,29,"number"],[139,46,328,19],[139,47,328,36,"isRequired"],[139,57,317,33],[140,0,329,4,"longitudeDelta"],[140,6,329,4,"longitudeDelta"],[140,20,329,18],[140,22,329,20,"PropTypes"],[140,41,329,30,"number"],[140,47,329,20],[140,48,329,37,"isRequired"],[141,0,317,33],[141,5,317,17],[141,6,70,15],[142,0,338,2,"camera"],[142,4,338,2,"camera"],[142,10,338,8],[142,12,338,10,"CameraShape"],[142,23,70,15],[143,0,351,2,"initialCamera"],[143,4,351,2,"initialCamera"],[143,17,351,15],[143,19,351,17,"CameraShape"],[143,30,70,15],[144,0,359,2,"liteMode"],[144,4,359,2,"liteMode"],[144,12,359,10],[144,14,359,12,"PropTypes"],[144,33,359,22,"bool"],[144,37,70,15],[145,0,368,2,"mapPadding"],[145,4,368,2,"mapPadding"],[145,14,368,12],[145,16,368,14,"EdgeInsetsPropType"],[145,47,70,15],[146,0,377,2,"paddingAdjustmentBehavior"],[146,4,377,2,"paddingAdjustmentBehavior"],[146,29,377,27],[146,31,377,29,"PropTypes"],[146,50,377,39,"oneOf"],[146,55,377,29],[146,56,377,45],[146,57,377,46],[146,65,377,45],[146,67,377,56],[146,78,377,45],[146,80,377,69],[146,87,377,45],[146,88,377,29],[146,89,70,15],[147,0,384,2,"maxDelta"],[147,4,384,2,"maxDelta"],[147,12,384,10],[147,14,384,12,"PropTypes"],[147,33,384,22,"number"],[147,39,70,15],[148,0,391,2,"minDelta"],[148,4,391,2,"minDelta"],[148,12,391,10],[148,14,391,12,"PropTypes"],[148,33,391,22,"number"],[148,39,70,15],[149,0,397,2,"legalLabelInsets"],[149,4,397,2,"legalLabelInsets"],[149,20,397,18],[149,22,397,20,"EdgeInsetsPropType"],[149,53,70,15],[150,0,402,2,"onMapReady"],[150,4,402,2,"onMapReady"],[150,14,402,12],[150,16,402,14,"PropTypes"],[150,35,402,24,"func"],[150,39,70,15],[151,0,408,2,"onMapLoaded"],[151,4,408,2,"onMapLoaded"],[151,15,408,13],[151,17,408,15,"PropTypes"],[151,36,408,25,"func"],[151,40,70,15],[152,0,413,2,"onKmlReady"],[152,4,413,2,"onKmlReady"],[152,14,413,12],[152,16,413,14,"PropTypes"],[152,35,413,24,"func"],[152,39,70,15],[153,0,418,2,"onRegionChange"],[153,4,418,2,"onRegionChange"],[153,18,418,16],[153,20,418,18,"PropTypes"],[153,39,418,28,"func"],[153,43,70,15],[154,0,423,2,"onRegionChangeComplete"],[154,4,423,2,"onRegionChangeComplete"],[154,26,423,24],[154,28,423,26,"PropTypes"],[154,47,423,36,"func"],[154,51,70,15],[155,0,428,2,"onPress"],[155,4,428,2,"onPress"],[155,11,428,9],[155,13,428,11,"PropTypes"],[155,32,428,21,"func"],[155,36,70,15],[156,0,433,2,"onDoublePress"],[156,4,433,2,"onDoublePress"],[156,17,433,15],[156,19,433,17,"PropTypes"],[156,38,433,27,"func"],[156,42,70,15],[157,0,438,2,"onLongPress"],[157,4,438,2,"onLongPress"],[157,15,438,13],[157,17,438,15,"PropTypes"],[157,36,438,25,"func"],[157,40,70,15],[158,0,443,2,"onUserLocationChange"],[158,4,443,2,"onUserLocationChange"],[158,24,443,22],[158,26,443,24,"PropTypes"],[158,45,443,34,"func"],[158,49,70,15],[159,0,448,2,"onPanDrag"],[159,4,448,2,"onPanDrag"],[159,13,448,11],[159,15,448,13,"PropTypes"],[159,34,448,23,"func"],[159,38,70,15],[160,0,453,2,"onPoiClick"],[160,4,453,2,"onPoiClick"],[160,14,453,12],[160,16,453,14,"PropTypes"],[160,35,453,24,"func"],[160,39,70,15],[161,0,458,2,"onMarkerPress"],[161,4,458,2,"onMarkerPress"],[161,17,458,15],[161,19,458,17,"PropTypes"],[161,38,458,27,"func"],[161,42,70,15],[162,0,466,2,"onMarkerSelect"],[162,4,466,2,"onMarkerSelect"],[162,18,466,16],[162,20,466,18,"PropTypes"],[162,39,466,28,"func"],[162,43,70,15],[163,0,474,2,"onMarkerDeselect"],[163,4,474,2,"onMarkerDeselect"],[163,20,474,18],[163,22,474,20,"PropTypes"],[163,41,474,30,"func"],[163,45,70,15],[164,0,479,2,"onCalloutPress"],[164,4,479,2,"onCalloutPress"],[164,18,479,16],[164,20,479,18,"PropTypes"],[164,39,479,28,"func"],[164,43,70,15],[165,0,484,2,"onMarkerDragStart"],[165,4,484,2,"onMarkerDragStart"],[165,21,484,19],[165,23,484,21,"PropTypes"],[165,42,484,31,"func"],[165,46,70,15],[166,0,489,2,"onMarkerDrag"],[166,4,489,2,"onMarkerDrag"],[166,16,489,14],[166,18,489,16,"PropTypes"],[166,37,489,26,"func"],[166,41,70,15],[167,0,495,2,"onMarkerDragEnd"],[167,4,495,2,"onMarkerDragEnd"],[167,19,495,17],[167,21,495,19,"PropTypes"],[167,40,495,29,"func"],[167,44,70,15],[168,0,500,2,"minZoomLevel"],[168,4,500,2,"minZoomLevel"],[168,16,500,14],[168,18,500,16,"PropTypes"],[168,37,500,26,"number"],[168,43,70,15],[169,0,505,2,"maxZoomLevel"],[169,4,505,2,"maxZoomLevel"],[169,16,505,14],[169,18,505,16,"PropTypes"],[169,37,505,26,"number"],[169,43,70,15],[170,0,510,2,"kmlSrc"],[170,4,510,2,"kmlSrc"],[170,10,510,8],[170,12,510,10,"PropTypes"],[170,31,510,20,"string"],[170,37,70,15],[171,0,517,2,"compassOffset"],[171,4,517,2,"compassOffset"],[171,17,517,15],[171,19,517,17,"PointPropType"],[171,45,70,15],[172,0,522,2,"onIndoorLevelActivated"],[172,4,522,2,"onIndoorLevelActivated"],[172,26,522,24],[172,28,522,26,"PropTypes"],[172,47,522,36,"func"],[172,51,70,15],[173,0,527,2,"onIndoorBuildingFocused"],[173,4,527,2,"onIndoorBuildingFocused"],[173,27,527,25],[173,29,527,27,"PropTypes"],[173,48,527,37,"func"],[174,0,70,15],[174,4,70,0],[176,6,530,6,"MapView"],[176,13],[179,0,531,2],[179,21,531,14,"props"],[179,26,531,2],[179,28,531,21],[180,0,531,21],[182,0,531,21],[183,0,532,4],[183,111,532,10,"props"],[183,116,532,4],[184,0,534,4],[184,12,534,9,"state"],[184,17,534,4],[184,20,534,17],[185,0,535,6,"isReady"],[185,8,535,6,"isReady"],[185,15,535,13],[185,17,535,15,"Platform"],[185,39,535,24,"OS"],[185,41,535,15],[185,46,535,31],[186,0,534,17],[186,7,534,4],[187,0,538,4],[187,12,538,9,"_onMapReady"],[187,23,538,4],[187,26,538,23],[187,32,538,28,"_onMapReady"],[187,43,538,23],[187,44,538,40,"bind"],[187,48,538,23],[187,93,538,4],[188,0,539,4],[188,12,539,9,"_onMarkerPress"],[188,26,539,4],[188,29,539,26],[188,35,539,31,"_onMarkerPress"],[188,49,539,26],[188,50,539,46,"bind"],[188,54,539,26],[188,99,539,4],[189,0,540,4],[189,12,540,9,"_onChange"],[189,21,540,4],[189,24,540,21],[189,30,540,26,"_onChange"],[189,39,540,21],[189,40,540,36,"bind"],[189,44,540,21],[189,89,540,4],[190,0,541,4],[190,12,541,9,"_onLayout"],[190,21,541,4],[190,24,541,21],[190,30,541,26,"_onLayout"],[190,39,541,21],[190,40,541,36,"bind"],[190,44,541,21],[190,89,541,4],[191,0,531,21],[192,0,542,3],[196,40,544,20],[197,0,545,4],[197,15,545,11],[198,0,545,13,"provider"],[198,10,545,13,"provider"],[198,18,545,21],[198,20,545,23],[198,25,545,28,"props"],[198,30,545,23],[198,31,545,34,"provider"],[199,0,545,11],[199,9,545,4],[200,0,546,3],[203,46,548,26,"prevProps"],[203,55],[203,57,548,37],[204,0,549,4],[204,12,550,6],[204,17,550,11,"state"],[204,22,550,6],[204,23,550,17,"isReady"],[204,30,550,6],[204,34,551,6],[204,39,551,11,"props"],[204,44,551,6],[204,45,551,17,"customMapStyle"],[204,59,551,6],[204,64,551,36,"prevProps"],[204,73,551,45],[204,74,551,46,"customMapStyle"],[204,88,549,4],[204,90,552,6],[205,0,553,6],[205,15,553,11,"_updateStyle"],[205,27,553,6],[205,28,553,24],[205,33,553,29,"props"],[205,38,553,6],[206,0,554,5],[208,0,555,4],[208,15,555,11],[208,20,555,16,"props"],[208,25,555,11],[208,26,555,22,"region"],[208,32,555,11],[208,36,555,32],[208,40,555,4],[209,0,556,3],[212,41,558,21,"prevProps"],[212,50],[212,52,558,32,"prevState"],[212,61],[212,63,558,43,"region"],[212,69],[212,71,558,51],[213,0,559,4],[213,12,559,10,"a"],[213,13,559,11],[213,16,559,14],[213,21,559,19,"__lastRegion"],[213,33,559,4],[214,0,560,4],[214,12,560,10,"b"],[214,13,560,11],[214,16,560,14,"region"],[214,22,560,4],[216,0,561,4],[216,12,561,8],[216,13,561,9,"a"],[216,14,561,8],[216,18,561,14],[216,19,561,15,"b"],[216,20,561,4],[216,22,561,18],[217,0,562,6],[218,0,563,5],[220,0,564,4],[220,12,565,6,"a"],[220,13,565,7],[220,14,565,8,"latitude"],[220,22,565,6],[220,27,565,21,"b"],[220,28,565,22],[220,29,565,23,"latitude"],[220,37,565,6],[220,41,566,6,"a"],[220,42,566,7],[220,43,566,8,"longitude"],[220,52,566,6],[220,57,566,22,"b"],[220,58,566,23],[220,59,566,24,"longitude"],[220,68,565,6],[220,72,567,6,"a"],[220,73,567,7],[220,74,567,8,"latitudeDelta"],[220,87,567,6],[220,92,567,26,"b"],[220,93,567,27],[220,94,567,28,"latitudeDelta"],[220,107,565,6],[220,111,568,6,"a"],[220,112,568,7],[220,113,568,8,"longitudeDelta"],[220,127,568,6],[220,132,568,27,"b"],[220,133,568,28],[220,134,568,29,"longitudeDelta"],[220,148,564,4],[220,150,569,6],[221,0,570,6],[221,15,570,11,"map"],[221,18,570,6],[221,19,570,15,"setNativeProps"],[221,33,570,6],[221,34,570,30],[222,0,570,32,"region"],[222,12,570,32,"region"],[222,18,570,38],[222,20,570,40,"b"],[223,0,570,30],[223,11,570,6],[224,0,571,5],[225,0,572,3],[228,42,574,22],[229,0,574,22],[229,12,575,12,"isReady"],[229,19,574,22],[229,22,575,24],[229,27,575,29,"state"],[229,32,574,22],[229,33,575,12,"isReady"],[229,40,574,22],[231,0,576,4],[231,12,576,8,"isReady"],[231,19,576,4],[231,21,576,17],[232,0,577,6],[232,15,577,11,"_updateStyle"],[232,27,577,6],[232,28,577,24],[232,33,577,29,"props"],[232,38,577,6],[233,0,578,5],[234,0,579,3],[237,35,581,15,"props"],[237,40],[237,42,581,22],[238,0,581,22],[238,12,582,12,"customMapStyle"],[238,26,581,22],[238,29,582,31,"props"],[238,34,581,22],[238,35,582,12,"customMapStyle"],[238,49,581,22],[239,0,583,4],[239,13,583,9,"map"],[239,16,583,4],[239,17,583,13,"setNativeProps"],[239,31,583,4],[239,32,583,28],[240,0,584,6,"customMapStyleString"],[240,10,584,6,"customMapStyleString"],[240,30,584,26],[240,32,584,28,"JSON"],[240,36,584,32],[240,37,584,33,"stringify"],[240,46,584,28],[240,47,584,43,"customMapStyle"],[240,61,584,28],[241,0,583,28],[241,9,583,4],[242,0,586,3],[245,36,588,16],[246,0,588,16],[246,26,589,50],[246,31,589,55,"props"],[246,36,588,16],[247,0,588,16],[247,12,589,12,"region"],[247,18,588,16],[247,33,589,12,"region"],[247,39,588,16],[248,0,588,16],[248,12,589,20,"initialRegion"],[248,25,588,16],[248,40,589,20,"initialRegion"],[248,53,588,16],[249,0,588,16],[249,12,589,35,"onMapReady"],[249,22,588,16],[249,37,589,35,"onMapReady"],[249,47,588,16],[251,0,590,4],[251,12,590,8,"region"],[251,18,590,4],[251,20,590,16],[252,0,591,6],[252,15,591,11,"map"],[252,18,591,6],[252,19,591,15,"setNativeProps"],[252,33,591,6],[252,34,591,30],[253,0,591,32,"region"],[253,12,591,32,"region"],[253,18,591,38],[253,20,591,32,"region"],[254,0,591,30],[254,11,591,6],[255,0,592,5],[255,9,590,4],[255,15,592,11],[255,19,592,15,"initialRegion"],[255,32,592,11],[255,34,592,30],[256,0,593,6],[256,15,593,11,"map"],[256,18,593,6],[256,19,593,15,"setNativeProps"],[256,33,593,6],[256,34,593,30],[257,0,593,32,"initialRegion"],[257,12,593,32,"initialRegion"],[257,25,593,45],[257,27,593,32,"initialRegion"],[258,0,593,30],[258,11,593,6],[259,0,594,5],[261,0,595,4],[261,13,595,9,"_updateStyle"],[261,25,595,4],[261,26,595,22],[261,31,595,27,"props"],[261,36,595,4],[263,0,596,4],[263,13,596,9,"setState"],[263,21,596,4],[263,22,596,18],[264,0,596,20,"isReady"],[264,10,596,20,"isReady"],[264,17,596,27],[264,19,596,29],[265,0,596,18],[265,9,596,4],[265,11,596,37],[265,23,596,43],[266,0,597,6],[266,14,597,10,"onMapReady"],[266,24,597,6],[266,26,597,22],[267,0,598,8,"onMapReady"],[267,12,598,8,"onMapReady"],[267,22,598,18],[268,0,599,7],[269,0,600,5],[269,9,596,4],[270,0,601,3],[273,32,603,12,"e"],[273,33],[273,35,603,15],[274,0,603,15],[274,12,604,12,"layout"],[274,18,603,15],[274,21,604,23,"e"],[274,22,604,24],[274,23,604,25,"nativeEvent"],[274,34,603,15],[274,35,604,12,"layout"],[274,41,603,15],[276,0,605,4],[276,12,605,8],[276,13,605,9,"layout"],[276,19,605,15],[276,20,605,16,"width"],[276,25,605,8],[276,29,605,25],[276,30,605,26,"layout"],[276,36,605,32],[276,37,605,33,"height"],[276,43,605,4],[276,45,605,41],[277,0,606,6],[278,0,607,5],[280,0,608,4],[280,12,608,8],[280,17,608,13,"state"],[280,22,608,8],[280,23,608,19,"isReady"],[280,30,608,8],[280,34,608,30],[280,35,608,31],[280,40,608,36,"__layoutCalled"],[280,54,608,4],[280,56,608,52],[281,0,608,52],[281,29,609,40],[281,34,609,45,"props"],[281,39,608,52],[282,0,608,52],[282,14,609,14,"region"],[282,20,608,52],[282,36,609,14,"region"],[282,42,608,52],[283,0,608,52],[283,14,609,22,"initialRegion"],[283,27,608,52],[283,43,609,22,"initialRegion"],[283,56,608,52],[285,0,610,6],[285,14,610,10,"region"],[285,20,610,6],[285,22,610,18],[286,0,611,8],[286,17,611,13,"__layoutCalled"],[286,31,611,8],[286,34,611,30],[286,38,611,8],[287,0,612,8],[287,17,612,13,"map"],[287,20,612,8],[287,21,612,17,"setNativeProps"],[287,35,612,8],[287,36,612,32],[288,0,612,34,"region"],[288,14,612,34,"region"],[288,20,612,40],[288,22,612,34,"region"],[289,0,612,32],[289,13,612,8],[290,0,613,7],[290,11,610,6],[290,17,613,13],[290,21,613,17,"initialRegion"],[290,34,613,13],[290,36,613,32],[291,0,614,8],[291,17,614,13,"__layoutCalled"],[291,31,614,8],[291,34,614,30],[291,38,614,8],[292,0,615,8],[292,17,615,13,"map"],[292,20,615,8],[292,21,615,17,"setNativeProps"],[292,35,615,8],[292,36,615,32],[293,0,615,34,"initialRegion"],[293,14,615,34,"initialRegion"],[293,27,615,47],[293,29,615,34,"initialRegion"],[294,0,615,32],[294,13,615,8],[295,0,616,7],[296,0,617,5],[298,0,618,4],[298,12,618,8],[298,17,618,13,"props"],[298,22,618,8],[298,23,618,19,"onLayout"],[298,31,618,4],[298,33,618,29],[299,0,619,6],[299,15,619,11,"props"],[299,20,619,6],[299,21,619,17,"onLayout"],[299,29,619,6],[299,30,619,26,"e"],[299,31,619,6],[300,0,620,5],[301,0,621,3],[304,37,623,17,"event"],[304,42],[304,44,623,24],[305,0,624,4],[305,12,624,8],[305,17,624,13,"props"],[305,22,624,8],[305,23,624,19,"onMarkerPress"],[305,36,624,4],[305,38,624,34],[306,0,625,6],[306,15,625,11,"props"],[306,20,625,6],[306,21,625,17,"onMarkerPress"],[306,34,625,6],[306,35,625,31,"event"],[306,40,625,36],[306,41,625,37,"nativeEvent"],[306,52,625,6],[307,0,626,5],[308,0,627,3],[311,32,629,12,"event"],[311,37],[311,39,629,19],[312,0,630,4],[312,13,630,9,"__lastRegion"],[312,25,630,4],[312,28,630,24,"event"],[312,33,630,29],[312,34,630,30,"nativeEvent"],[312,45,630,24],[312,46,630,42,"region"],[312,52,630,4],[314,0,631,4],[314,12,631,8,"event"],[314,17,631,13],[314,18,631,14,"nativeEvent"],[314,29,631,8],[314,30,631,26,"continuous"],[314,40,631,4],[314,42,631,38],[315,0,632,6],[315,14,632,10],[315,19,632,15,"props"],[315,24,632,10],[315,25,632,21,"onRegionChange"],[315,39,632,6],[315,41,632,37],[316,0,633,8],[316,17,633,13,"props"],[316,22,633,8],[316,23,633,19,"onRegionChange"],[316,37,633,8],[316,38,633,34,"event"],[316,43,633,39],[316,44,633,40,"nativeEvent"],[316,55,633,34],[316,56,633,52,"region"],[316,62,633,8],[317,0,634,7],[318,0,635,5],[318,9,631,4],[318,15,635,11],[318,19,635,15],[318,24,635,20,"props"],[318,29,635,15],[318,30,635,26,"onRegionChangeComplete"],[318,52,635,11],[318,54,635,50],[319,0,636,6],[319,15,636,11,"props"],[319,20,636,6],[319,21,636,17,"onRegionChangeComplete"],[319,43,636,6],[319,44,636,40,"event"],[319,49,636,45],[319,50,636,46,"nativeEvent"],[319,61,636,40],[319,62,636,58,"region"],[319,68,636,6],[320,0,637,5],[321,0,638,3],[324,34,640,14],[325,0,641,4],[325,12,641,8,"Platform"],[325,34,641,17,"OS"],[325,36,641,8],[325,41,641,24],[325,50,641,4],[325,52,641,35],[326,0,642,6],[326,17,642,13,"NativeModules"],[326,44,642,27,"AirMapModule"],[326,56,642,13],[326,57,642,40,"getCamera"],[326,66,642,13],[326,67,642,50],[326,72,642,55,"_getHandle"],[326,82,642,50],[326,84,642,13],[326,85,642,6],[327,0,643,5],[327,9,641,4],[327,15,643,11],[327,19,643,15,"Platform"],[327,41,643,24,"OS"],[327,43,643,15],[327,48,643,31],[327,53,643,11],[327,55,643,38],[328,0,644,6],[328,17,644,13],[328,22,644,18,"_runCommand"],[328,33,644,13],[328,34,644,30],[328,45,644,13],[328,47,644,43],[328,49,644,13],[328,50,644,6],[329,0,645,5],[331,0,646,4],[331,15,646,11,"Promise"],[331,22,646,18],[331,23,646,19,"reject"],[331,29,646,11],[331,30,646,26],[331,72,646,11],[331,73,646,4],[332,0,647,3],[335,32,649,12,"camera"],[335,38],[335,40,649,20],[336,0,650,4],[336,13,650,9,"_runCommand"],[336,24,650,4],[336,25,650,21],[336,36,650,4],[336,38,650,34],[336,39,650,35,"camera"],[336,45,650,34],[336,46,650,4],[337,0,651,3],[340,36,653,16,"camera"],[340,42],[340,44,653,24,"opts"],[340,48],[340,50,653,30],[341,0,654,4],[341,13,654,9,"_runCommand"],[341,24,654,4],[341,25,654,21],[341,40,654,4],[341,42,654,38],[341,43,654,39,"camera"],[341,49,654,38],[341,51,654,48,"opts"],[341,55,654,52],[341,59,654,56,"opts"],[341,63,654,60],[341,64,654,61,"duration"],[341,72,654,47],[341,76,654,74],[341,79,654,38],[341,80,654,4],[342,0,655,3],[345,42,657,22,"location"],[345,50],[345,52,657,32,"bearing"],[345,59],[345,61,657,41,"angle"],[345,66],[345,68,657,48,"duration"],[345,76],[345,78,657,58],[346,0,658,4,"console"],[346,8,658,4,"console"],[346,15,658,11],[346,16,658,12,"warn"],[346,20,658,4],[346,21,659,6],[346,87,658,4],[348,0,661,4],[348,13,661,9,"_runCommand"],[348,24,661,4],[348,25,661,21],[348,46,661,4],[348,48,661,44],[348,49,662,6,"location"],[348,57,661,44],[348,59,663,6,"bearing"],[348,66,661,44],[348,68,664,6,"angle"],[348,73,661,44],[348,75,665,6,"duration"],[348,83,665,14],[348,87,665,18],[348,90,661,44],[348,91,661,4],[349,0,667,3],[352,38,669,18,"region"],[352,44],[352,46,669,26,"duration"],[352,54],[352,56,669,36],[353,0,670,4],[353,13,670,9,"_runCommand"],[353,24,670,4],[353,25,670,21],[353,42,670,4],[353,44,670,40],[353,45,670,41,"region"],[353,51,670,40],[353,53,670,49,"duration"],[353,61,670,57],[353,65,670,61],[353,68,670,40],[353,69,670,4],[354,0,671,3],[357,42,673,22,"latLng"],[357,48],[357,50,673,30,"duration"],[357,58],[357,60,673,40],[358,0,674,4,"console"],[358,8,674,4,"console"],[358,15,674,11],[358,16,674,12,"warn"],[358,20,674,4],[358,21,675,6],[358,87,674,4],[360,0,677,4],[360,13,677,9,"_runCommand"],[360,24,677,4],[360,25,677,21],[360,46,677,4],[360,48,677,44],[360,49,677,45,"latLng"],[360,55,677,44],[360,57,677,53,"duration"],[360,65,677,61],[360,69,677,65],[360,72,677,44],[360,73,677,4],[361,0,678,3],[364,39,680,19,"bearing"],[364,46],[364,48,680,28,"duration"],[364,56],[364,58,680,38],[365,0,681,4,"console"],[365,8,681,4,"console"],[365,15,681,11],[365,16,681,12,"warn"],[365,20,681,4],[365,21,682,6],[365,84,681,4],[367,0,684,4],[367,13,684,9,"_runCommand"],[367,24,684,4],[367,25,684,21],[367,43,684,4],[367,45,684,41],[367,46,684,42,"bearing"],[367,53,684,41],[367,55,684,51,"duration"],[367,63,684,59],[367,67,684,63],[367,70,684,41],[367,71,684,4],[368,0,685,3],[371,44,687,24,"angle"],[371,49],[371,51,687,31,"duration"],[371,59],[371,61,687,41],[372,0,688,4,"console"],[372,8,688,4,"console"],[372,15,688,11],[372,16,688,12,"warn"],[372,20,688,4],[372,21,689,6],[372,89,688,4],[374,0,691,4],[374,13,691,9,"_runCommand"],[374,24,691,4],[374,25,691,21],[374,48,691,4],[374,50,691,46],[374,51,691,47,"angle"],[374,56,691,46],[374,58,691,54,"duration"],[374,66,691,62],[374,70,691,66],[374,73,691,46],[374,74,691,4],[375,0,692,3],[378,36,694,16,"animated"],[378,44],[378,46,694,26],[379,0,695,4],[379,13,695,9,"_runCommand"],[379,24,695,4],[379,25,695,21],[379,40,695,4],[379,42,695,38],[379,43,695,39,"animated"],[379,51,695,38],[379,52,695,4],[380,0,696,3],[383,43,698,23,"markers"],[383,50],[383,52,698,46],[384,0,698,46],[384,12,698,32,"options"],[384,19,698,46],[384,90,698,42],[384,92,698,46],[385,0,698,46],[385,35,702,8,"options"],[385,42,698,46],[385,43,700,6,"edgePadding"],[385,54,698,46],[386,0,698,46],[386,12,700,6,"edgePadding"],[386,23,698,46],[386,60,700,20],[387,0,700,22,"top"],[387,10,700,22,"top"],[387,13,700,25],[387,15,700,27],[387,16,700,20],[388,0,700,30,"right"],[388,10,700,30,"right"],[388,15,700,35],[388,17,700,37],[388,18,700,20],[389,0,700,40,"bottom"],[389,10,700,40,"bottom"],[389,16,700,46],[389,18,700,48],[389,19,700,20],[390,0,700,51,"left"],[390,10,700,51,"left"],[390,14,700,55],[390,16,700,57],[391,0,700,20],[391,9,698,46],[392,0,698,46],[392,32,702,8,"options"],[392,39,698,46],[392,40,701,6,"animated"],[392,48,698,46],[393,0,698,46],[393,12,701,6,"animated"],[393,20,698,46],[393,54,701,17],[393,58,698,46],[395,0,704,4],[395,13,704,9,"_runCommand"],[395,24,704,4],[395,25,704,21],[395,47,704,4],[395,49,704,45],[395,50,704,46,"markers"],[395,57,704,45],[395,59,704,55,"edgePadding"],[395,70,704,45],[395,72,704,68,"animated"],[395,80,704,45],[395,81,704,4],[396,0,705,3],[399,41,707,51],[400,0,707,51],[400,12,707,19,"coordinates"],[400,23,707,51],[400,94,707,33],[400,96,707,51],[401,0,707,51],[401,12,707,37,"options"],[401,19,707,51],[401,90,707,47],[401,92,707,51],[402,0,707,51],[402,36,711,8,"options"],[402,43,707,51],[402,44,709,6,"edgePadding"],[402,55,707,51],[403,0,707,51],[403,12,709,6,"edgePadding"],[403,23,707,51],[403,61,709,20],[404,0,709,22,"top"],[404,10,709,22,"top"],[404,13,709,25],[404,15,709,27],[404,16,709,20],[405,0,709,30,"right"],[405,10,709,30,"right"],[405,15,709,35],[405,17,709,37],[405,18,709,20],[406,0,709,40,"bottom"],[406,10,709,40,"bottom"],[406,16,709,46],[406,18,709,48],[406,19,709,20],[407,0,709,51,"left"],[407,10,709,51,"left"],[407,14,709,55],[407,16,709,57],[408,0,709,20],[408,9,707,51],[409,0,707,51],[409,33,711,8,"options"],[409,40,707,51],[409,41,710,6,"animated"],[409,49,707,51],[410,0,707,51],[410,12,710,6,"animated"],[410,20,707,51],[410,55,710,17],[410,59,707,51],[412,0,713,4],[412,13,713,9,"_runCommand"],[412,24,713,4],[412,25,713,21],[412,43,713,4],[412,45,713,41],[412,46,713,42,"coordinates"],[412,57,713,41],[412,59,713,55,"edgePadding"],[412,70,713,41],[412,72,713,68,"animated"],[412,80,713,41],[412,81,713,4],[413,0,714,3],[421,22,722,8,"Platform"],[421,44,722,17,"OS"],[421,46,722,8],[421,51,722,24],[421,60],[427,50,723,19,"NativeModules"],[427,77,723,33,"AirMapModule"],[427,89,723,19],[427,90,723,46,"getMapBoundaries"],[427,106,723,19],[427,107,724,8],[427,112,724,13,"_getHandle"],[427,122,724,8],[427,124,723,19],[427,125],[433,22,726,15,"Platform"],[433,44,726,24,"OS"],[433,46,726,15],[433,51,726,31],[433,56],[439,50,727,19],[439,55,727,24,"_runCommand"],[439,66,727,19],[439,67,727,36],[439,85,727,19],[439,87,727,56],[439,89,727,19],[439,90],[445,49,729,11,"Promise"],[445,56,729,18],[445,57,729,19,"reject"],[445,63,729,11],[445,64,729,26],[445,113,729,11],[445,114],[456,39,732,19,"northEast"],[456,48],[456,50,732,30,"southWest"],[456,59],[456,61,732,41],[457,0,733,4],[457,13,733,9,"_runCommand"],[457,24,733,4],[457,25,733,21],[457,43,733,4],[457,45,733,41],[457,46,733,42,"northEast"],[457,55,733,41],[457,57,733,53,"southWest"],[457,66,733,41],[457,67,733,4],[458,0,734,3],[461,48,736,28,"activeLevelIndex"],[461,64],[461,66,736,46],[462,0,737,4],[462,13,737,9,"_runCommand"],[462,24,737,4],[462,25,737,21],[462,52,737,4],[462,54,737,50],[462,55,737,51,"activeLevelIndex"],[462,71,737,50],[462,72,737,4],[463,0,738,3],[466,35,754,15,"args"],[466,39],[466,41,754,21],[467,0,754,21],[469,0,758,4],[469,12,758,8,"Platform"],[469,34,758,17,"OS"],[469,36,758,8],[469,41,758,24],[469,46,758,8],[469,50,758,33,"arguments"],[469,59,758,42],[469,60,758,43,"length"],[469,66,758,33],[469,71,758,54],[469,72,758,4],[469,74,758,57],[470,0,759,6,"console"],[470,10,759,6,"console"],[470,17,759,13],[470,18,759,14,"warn"],[470,22,759,6],[470,23,760,8],[470,101,759,6],[471,0,762,6],[471,14,762,12,"width"],[471,19,762,17],[471,22,762,20,"arguments"],[471,31,762,29],[471,32,762,30],[471,33,762,29],[471,34,762,6],[472,0,763,6],[472,14,763,12,"height"],[472,20,763,18],[472,23,763,21,"arguments"],[472,32,763,30],[472,33,763,31],[472,34,763,30],[472,35,763,6],[473,0,764,6],[473,14,764,12,"region"],[473,20,764,18],[473,23,764,21,"arguments"],[473,32,764,30],[473,33,764,31],[473,34,764,30],[473,35,764,6],[474,0,765,6],[474,14,765,12,"callback"],[474,22,765,20],[474,25,765,23,"arguments"],[474,34,765,32],[474,35,765,33],[474,36,765,32],[474,37,765,6],[476,0,766,6],[476,15,766,11,"_runCommand"],[476,26,766,6],[476,27,766,23],[476,41,766,6],[476,43,766,39],[476,44,767,8,"width"],[476,49,767,13],[476,53,767,17],[476,54,766,39],[476,56,768,8,"height"],[476,62,768,14],[476,66,768,18],[476,67,766,39],[476,69,769,8,"region"],[476,75,769,14],[476,79,769,18],[476,81,766,39],[476,83,770,8],[476,88,766,39],[476,90,771,8],[476,91,766,39],[476,93,772,8],[476,101,766,39],[476,103,773,8,"callback"],[476,111,766,39],[476,112,766,6],[478,0,775,6],[478,17,775,13,"undefined"],[478,26,775,6],[479,0,776,5],[481,0,779,4],[481,12,779,10,"config"],[481,18,779,16],[481,21,779,19],[482,0,780,6,"width"],[482,10,780,6,"width"],[482,15,780,11],[482,17,780,13,"args"],[482,21,780,17],[482,22,780,18,"width"],[482,27,780,13],[482,31,780,27],[482,32,779,19],[483,0,781,6,"height"],[483,10,781,6,"height"],[483,16,781,12],[483,18,781,14,"args"],[483,22,781,18],[483,23,781,19,"height"],[483,29,781,14],[483,33,781,29],[483,34,779,19],[484,0,782,6,"region"],[484,10,782,6,"region"],[484,16,782,12],[484,18,782,14,"args"],[484,22,782,18],[484,23,782,19,"region"],[484,29,782,14],[484,33,782,29],[484,35,779,19],[485,0,783,6,"format"],[485,10,783,6,"format"],[485,16,783,12],[485,18,783,14,"args"],[485,22,783,18],[485,23,783,19,"format"],[485,29,783,14],[485,33,783,29],[485,38,779,19],[486,0,784,6,"quality"],[486,10,784,6,"quality"],[486,17,784,13],[486,19,784,15,"args"],[486,23,784,19],[486,24,784,20,"quality"],[486,31,784,15],[486,35,784,31],[486,38,779,19],[487,0,785,6,"result"],[487,10,785,6,"result"],[487,16,785,12],[487,18,785,14,"args"],[487,22,785,18],[487,23,785,19,"result"],[487,29,785,14],[487,33,785,29],[488,0,779,19],[488,9,779,4],[490,0,787,4],[490,12,787,8,"config"],[490,18,787,14],[490,19,787,15,"format"],[490,25,787,8],[490,30,787,26],[490,35,787,8],[490,39,787,35,"config"],[490,45,787,41],[490,46,787,42,"format"],[490,52,787,35],[490,57,787,53],[490,62,787,4],[490,64,787,60],[491,0,788,6],[491,16,788,12],[491,20,788,16,"Error"],[491,25,788,12],[491,26,788,22],[491,52,788,12],[491,53,788,6],[492,0,789,5],[494,0,790,4],[494,12,790,8,"config"],[494,18,790,14],[494,19,790,15,"result"],[494,25,790,8],[494,30,790,26],[494,36,790,8],[494,40,790,36,"config"],[494,46,790,42],[494,47,790,43,"result"],[494,53,790,36],[494,58,790,54],[494,66,790,4],[494,68,790,64],[495,0,791,6],[495,16,791,12],[495,20,791,16,"Error"],[495,25,791,12],[495,26,791,22],[495,52,791,12],[495,53,791,6],[496,0,792,5],[498,0,795,4],[498,12,795,8,"Platform"],[498,34,795,17,"OS"],[498,36,795,8],[498,41,795,24],[498,50,795,4],[498,52,795,35],[499,0,796,6],[499,17,796,13,"NativeModules"],[499,44,796,27,"AirMapModule"],[499,56,796,13],[499,57,796,40,"takeSnapshot"],[499,69,796,13],[499,70,796,53],[499,75,796,58,"_getHandle"],[499,85,796,53],[499,87,796,13],[499,89,796,72,"config"],[499,95,796,13],[499,96,796,6],[500,0,797,5],[500,9,795,4],[500,15,797,11],[500,19,797,15,"Platform"],[500,41,797,24,"OS"],[500,43,797,15],[500,48,797,31],[500,53,797,11],[500,55,797,38],[501,0,798,6],[501,17,798,13],[501,21,798,17,"Promise"],[501,28,798,13],[501,29,798,25],[501,39,798,26,"resolve"],[501,46,798,25],[501,48,798,35,"reject"],[501,54,798,25],[501,56,798,46],[502,0,799,8],[502,12,799,8],[502,18,799,12],[502,19,799,13,"_runCommand"],[502,30,799,8],[502,31,799,25],[502,45,799,8],[502,47,799,41],[502,48,800,10,"config"],[502,54,800,16],[502,55,800,17,"width"],[502,60,799,41],[502,62,801,10,"config"],[502,68,801,16],[502,69,801,17,"height"],[502,75,799,41],[502,77,802,10,"config"],[502,83,802,16],[502,84,802,17,"region"],[502,90,799,41],[502,92,803,10,"config"],[502,98,803,16],[502,99,803,17,"format"],[502,105,799,41],[502,107,804,10,"config"],[502,113,804,16],[502,114,804,17,"quality"],[502,121,799,41],[502,123,805,10,"config"],[502,129,805,16],[502,130,805,17,"result"],[502,136,799,41],[502,138,806,10],[502,148,806,11,"err"],[502,151,806,10],[502,153,806,16,"snapshot"],[502,161,806,10],[502,163,806,29],[503,0,807,12],[503,18,807,16,"err"],[503,21,807,12],[503,23,807,21],[504,0,808,14,"reject"],[504,16,808,14,"reject"],[504,22,808,20],[504,23,808,21,"err"],[504,26,808,20],[504,27,808,14],[505,0,809,13],[505,15,807,12],[505,21,809,19],[506,0,810,14,"resolve"],[506,16,810,14,"resolve"],[506,23,810,21],[506,24,810,22,"snapshot"],[506,32,810,21],[506,33,810,14],[507,0,811,13],[508,0,812,11],[508,13,799,41],[508,14,799,8],[509,0,814,7],[509,11,798,13],[509,12,798,6],[510,0,815,5],[512,0,816,4],[512,15,816,11,"Promise"],[512,22,816,18],[512,23,816,19,"reject"],[512,29,816,11],[512,30,816,26],[512,75,816,11],[512,76,816,4],[513,0,817,3],[516,41,828,21,"coordinate"],[516,51],[516,53,828,33],[517,0,829,4],[517,12,829,8,"Platform"],[517,34,829,17,"OS"],[517,36,829,8],[517,41,829,24],[517,50,829,4],[517,52,829,35],[518,0,830,6],[518,17,830,13,"NativeModules"],[518,44,830,27,"AirMapModule"],[518,56,830,13],[518,57,830,40,"pointForCoordinate"],[518,75,830,13],[518,76,831,8],[518,81,831,13,"_getHandle"],[518,91,831,8],[518,93,830,13],[518,95,832,8,"coordinate"],[518,105,830,13],[518,106,830,6],[519,0,834,5],[519,9,829,4],[519,15,834,11],[519,19,834,15,"Platform"],[519,41,834,24,"OS"],[519,43,834,15],[519,48,834,31],[519,53,834,11],[519,55,834,38],[520,0,835,6],[520,17,835,13],[520,22,835,18,"_runCommand"],[520,33,835,13],[520,34,835,30],[520,54,835,13],[520,56,835,52],[520,57,835,53,"coordinate"],[520,67,835,52],[520,68,835,13],[520,69,835,6],[521,0,836,5],[523,0,837,4],[523,15,837,11,"Promise"],[523,22,837,18],[523,23,837,19,"reject"],[523,29,837,11],[523,30,837,26],[523,81,837,11],[523,82,837,4],[524,0,838,3],[527,41,849,21,"point"],[527,46],[527,48,849,28],[528,0,850,4],[528,12,850,8,"Platform"],[528,34,850,17,"OS"],[528,36,850,8],[528,41,850,24],[528,50,850,4],[528,52,850,35],[529,0,851,6],[529,17,851,13,"NativeModules"],[529,44,851,27,"AirMapModule"],[529,56,851,13],[529,57,851,40,"coordinateForPoint"],[529,75,851,13],[529,76,852,8],[529,81,852,13,"_getHandle"],[529,91,852,8],[529,93,851,13],[529,95,853,8,"point"],[529,100,851,13],[529,101,851,6],[530,0,855,5],[530,9,850,4],[530,15,855,11],[530,19,855,15,"Platform"],[530,41,855,24,"OS"],[530,43,855,15],[530,48,855,31],[530,53,855,11],[530,55,855,38],[531,0,856,6],[531,17,856,13],[531,22,856,18,"_runCommand"],[531,33,856,13],[531,34,856,30],[531,54,856,13],[531,56,856,52],[531,57,856,53,"point"],[531,62,856,52],[531,63,856,13],[531,64,856,6],[532,0,857,5],[534,0,858,4],[534,15,858,11,"Promise"],[534,22,858,18],[534,23,858,19,"reject"],[534,29,858,11],[534,30,858,26],[534,81,858,11],[534,82,858,4],[535,0,859,3],[538,41,868,40],[539,0,868,40],[539,12,868,19,"onlyVisible"],[539,23,868,40],[539,94,868,33],[539,99,868,40],[541,0,869,4],[541,12,869,8,"Platform"],[541,34,869,17,"OS"],[541,36,869,8],[541,41,869,24],[541,46,869,4],[541,48,869,31],[542,0,870,6],[542,17,870,13],[542,22,870,18,"_runCommand"],[542,33,870,13],[542,34,870,30],[542,52,870,13],[542,54,870,50],[542,55,870,51,"onlyVisible"],[542,66,870,50],[542,67,870,13],[542,68,870,6],[543,0,871,5],[545,0,872,4],[545,15,872,11,"Promise"],[545,22,872,18],[545,23,872,19,"reject"],[545,29,872,11],[545,30,872,26],[545,79,872,11],[545,80,872,4],[546,0,873,3],[549,43,882,23,"region"],[549,49],[549,51,882,31],[550,0,883,4],[550,15,883,11],[551,0,884,6,"northEast"],[551,10,884,6,"northEast"],[551,19,884,15],[551,21,884,17],[552,0,885,8,"latitude"],[552,12,885,8,"latitude"],[552,20,885,16],[552,22,885,18,"region"],[552,28,885,24],[552,29,885,25,"latitude"],[552,37,885,18],[552,40,885,36,"region"],[552,46,885,42],[552,47,885,43,"latitudeDelta"],[552,60,885,36],[552,63,885,59],[552,64,884,17],[553,0,886,8,"longitude"],[553,12,886,8,"longitude"],[553,21,886,17],[553,23,886,19,"region"],[553,29,886,25],[553,30,886,26,"longitude"],[553,39,886,19],[553,42,886,38,"region"],[553,48,886,44],[553,49,886,45,"longitudeDelta"],[553,63,886,38],[553,66,886,62],[554,0,884,17],[554,11,883,11],[555,0,888,6,"southWest"],[555,10,888,6,"southWest"],[555,19,888,15],[555,21,888,17],[556,0,889,8,"latitude"],[556,12,889,8,"latitude"],[556,20,889,16],[556,22,889,18,"region"],[556,28,889,24],[556,29,889,25,"latitude"],[556,37,889,18],[556,40,889,36,"region"],[556,46,889,42],[556,47,889,43,"latitudeDelta"],[556,60,889,36],[556,63,889,59],[556,64,888,17],[557,0,890,8,"longitude"],[557,12,890,8,"longitude"],[557,21,890,17],[557,23,890,19,"region"],[557,29,890,25],[557,30,890,26,"longitude"],[557,39,890,19],[557,42,890,38,"region"],[557,48,890,44],[557,49,890,45,"longitudeDelta"],[557,63,890,38],[557,66,890,62],[558,0,888,17],[559,0,883,11],[559,9,883,4],[560,0,893,3],[563,40,895,20,"name"],[563,44],[563,46,895,26],[564,0,896,4],[564,12,896,10,"UIManager"],[564,21,896,19],[564,24,896,22,"NativeModules"],[564,51,896,36,"UIManager"],[564,60,896,4],[565,0,897,4],[565,12,897,10,"componentName"],[565,25,897,23],[565,28,897,26],[565,69,897,40],[565,74,897,45,"props"],[565,79,897,40],[565,80,897,51,"provider"],[565,88,897,26],[565,89,897,4],[567,0,899,4],[567,12,899,8],[567,13,899,9,"UIManager"],[567,22,899,18],[567,23,899,19,"getViewManagerConfig"],[567,43,899,4],[567,45,899,41],[568,0,901,6],[568,17,901,13,"UIManager"],[568,26,901,22],[568,27,901,23,"componentName"],[568,40,901,22],[568,41,901,13],[568,42,901,38,"Commands"],[568,50,901,13],[568,51,901,47,"name"],[568,55,901,13],[568,56,901,6],[569,0,902,5],[571,0,905,4],[571,15,905,11,"UIManager"],[571,24,905,20],[571,25,905,21,"getViewManagerConfig"],[571,45,905,11],[571,46,905,42,"componentName"],[571,59,905,11],[571,61,905,57,"Commands"],[571,69,905,11],[571,70,905,66,"name"],[571,74,905,11],[571,75,905,4],[572,0,906,3],[575,41,908,21,"name"],[575,45],[575,47,908,27],[576,0,909,4],[576,12,909,10,"managerName"],[576,23,909,21],[576,26,909,24],[576,67,909,38],[576,72,909,43,"props"],[576,77,909,38],[576,78,909,49,"provider"],[576,86,909,24],[576,87,909,4],[578,0,911,4],[578,12,911,8,"managerName"],[578,23,911,19],[578,28,911,24],[578,32,911,4],[578,34,911,30],[579,0,912,6],[579,14,912,12,"UIManager"],[579,23,912,21],[579,26,912,24,"NativeModules"],[579,53,912,38,"UIManager"],[579,62,912,6],[581,0,913,6],[581,14,913,10],[581,15,913,11,"UIManager"],[581,24,913,20],[581,25,913,21,"getViewManagerConfig"],[581,45,913,6],[581,47,913,43],[582,0,915,8],[582,19,915,15,"UIManager"],[582,28,915,24],[582,29,915,25,"name"],[582,33,915,24],[582,34,915,8],[583,0,916,7],[585,0,919,6],[585,17,919,13,"UIManager"],[585,26,919,22],[585,27,919,23,"getViewManagerConfig"],[585,47,919,13],[585,48,919,44,"name"],[585,52,919,13],[585,53,919,6],[586,0,920,5],[588,0,922,4],[588,15,922,11,"NativeModules"],[588,42,922,28],[588,83,922,42],[588,88,922,47,"props"],[588,93,922,42],[588,94,922,53,"provider"],[588,102,922,28],[588,103,922,11],[588,117,922,73,"name"],[588,121,922,11],[588,122,922,4],[589,0,923,3],[592,35,925,15],[593,0,926,4],[593,15,926,11],[593,48,926,26],[593,53,926,31,"map"],[593,56,926,11],[593,57,926,4],[594,0,927,3],[597,34,929,14,"name"],[597,38],[597,40,929,20,"args"],[597,44],[597,46,929,26],[598,0,930,4],[598,16,930,12,"Platform"],[598,38,930,21,"OS"],[598,40,930,4],[599,0,931,6],[599,15,931,11],[599,24,931,6],[600,0,932,8],[600,19,932,15,"NativeModules"],[600,46,932,29,"UIManager"],[600,55,932,15],[600,56,932,39,"dispatchViewManagerCommand"],[600,82,932,15],[600,83,933,10],[600,88,933,15,"_getHandle"],[600,98,933,10],[600,100,932,15],[600,102,934,10],[600,107,934,15,"_uiManagerCommand"],[600,124,934,10],[600,125,934,33,"name"],[600,129,934,10],[600,130,932,15],[600,132,935,10,"args"],[600,136,932,15],[600,137,932,8],[602,0,938,6],[602,15,938,11],[602,20,938,6],[603,0,939,8],[603,19,939,15],[603,24,939,20,"_mapManagerCommand"],[603,42,939,15],[603,43,939,39,"name"],[603,47,939,15],[603,64,939,45],[603,69,939,50,"_getHandle"],[603,79,939,45],[603,81,939,15],[603,123,939,67,"args"],[603,127,939,15],[603,130,939,8],[605,0,941,6],[606,0,942,8],[606,19,942,15,"Promise"],[606,26,942,22],[606,27,942,23,"reject"],[606,33,942,15],[606,68,942,62,"Platform"],[606,90,942,71,"OS"],[606,92,942,15],[606,93,942,8],[607,0,930,4],[608,0,944,3],[611,31,946,11],[612,0,946,11],[614,0,947,4],[614,12,947,8,"props"],[614,17,947,4],[616,0,949,4],[616,12,949,8],[616,17,949,13,"state"],[616,22,949,8],[616,23,949,19,"isReady"],[616,30,949,4],[616,32,949,28],[617,0,950,6,"props"],[617,10,950,6,"props"],[617,15,950,11],[618,0,951,8,"region"],[618,12,951,8,"region"],[618,18,951,14],[618,20,951,16],[618,24,950,11],[619,0,952,8,"initialRegion"],[619,12,952,8,"initialRegion"],[619,25,952,21],[619,27,952,23],[619,31,950,11],[620,0,953,8,"onMarkerPress"],[620,12,953,8,"onMarkerPress"],[620,25,953,21],[620,27,953,23],[620,32,953,28,"_onMarkerPress"],[620,46,950,11],[621,0,954,8,"onChange"],[621,12,954,8,"onChange"],[621,20,954,16],[621,22,954,18],[621,27,954,23,"_onChange"],[621,36,950,11],[622,0,955,8,"onMapReady"],[622,12,955,8,"onMapReady"],[622,22,955,18],[622,24,955,20],[622,29,955,25,"_onMapReady"],[622,40,950,11],[623,0,956,8,"onLayout"],[623,12,956,8,"onLayout"],[623,20,956,16],[623,22,956,18],[623,27,956,23,"_onLayout"],[624,0,950,11],[624,13,957,11],[624,18,957,16,"props"],[624,23,950,11],[624,24,950,6],[626,0,959,6],[626,14,960,8,"Platform"],[626,36,960,17,"OS"],[626,38,960,8],[626,43,960,24],[626,48,960,8],[626,52,961,8,"props"],[626,57,961,13],[626,58,961,14,"provider"],[626,66,961,8],[626,71,961,27,"ProviderConstants"],[626,88,961,44],[626,89,961,45,"PROVIDER_DEFAULT"],[626,105,960,8],[626,109,962,8,"GOOGLE_MAPS_ONLY_TYPES"],[626,131,962,30],[626,132,962,31,"includes"],[626,140,962,8],[626,141,962,40,"props"],[626,146,962,45],[626,147,962,46,"mapType"],[626,154,962,8],[626,155,959,6],[626,157,963,8],[627,0,964,8,"props"],[627,12,964,8,"props"],[627,17,964,13],[627,18,964,14,"mapType"],[627,25,964,8],[627,28,964,24,"MAP_TYPES"],[627,37,964,33],[627,38,964,34,"standard"],[627,46,964,8],[628,0,965,7],[630,0,966,6,"props"],[630,10,966,6,"props"],[630,15,966,11],[630,16,966,12,"handlePanDrag"],[630,29,966,6],[630,32,966,28],[630,33,966,29],[630,34,966,30,"props"],[630,39,966,35],[630,40,966,36,"onPanDrag"],[630,49,966,6],[631,0,967,5],[631,9,949,4],[631,15,967,11],[632,0,968,6,"props"],[632,10,968,6,"props"],[632,15,968,11],[632,18,968,14],[633,0,969,8,"style"],[633,12,969,8,"style"],[633,17,969,13],[633,19,969,15],[633,24,969,20,"props"],[633,29,969,15],[633,30,969,26,"style"],[633,35,968,14],[634,0,970,8,"region"],[634,12,970,8,"region"],[634,18,970,14],[634,20,970,16],[634,24,968,14],[635,0,971,8,"initialRegion"],[635,12,971,8,"initialRegion"],[635,25,971,21],[635,27,971,23],[635,31,968,14],[636,0,972,8,"onMarkerPress"],[636,12,972,8,"onMarkerPress"],[636,25,972,21],[636,27,972,23],[636,32,972,28,"_onMarkerPress"],[636,46,968,14],[637,0,973,8,"onChange"],[637,12,973,8,"onChange"],[637,20,973,16],[637,22,973,18],[637,27,973,23,"_onChange"],[637,36,968,14],[638,0,974,8,"onMapReady"],[638,12,974,8,"onMapReady"],[638,22,974,18],[638,24,974,20],[638,29,974,25,"_onMapReady"],[638,40,968,14],[639,0,975,8,"onLayout"],[639,12,975,8,"onLayout"],[639,20,975,16],[639,22,975,18],[639,27,975,23,"_onLayout"],[640,0,968,14],[640,11,968,6],[641,0,977,5],[643,0,979,4],[643,12,979,8,"Platform"],[643,34,979,17,"OS"],[643,36,979,8],[643,41,979,24],[643,50,979,8],[643,54,979,37],[643,59,979,42,"props"],[643,64,979,37],[643,65,979,48,"liteMode"],[643,73,979,4],[643,75,979,58],[644,0,980,6],[644,17,981,8],[644,46,981,9],[644,56,981,8],[645,0,982,10],[645,12,982,10],[645,15,982,13],[645,17,982,15],[645,30,982,15,"ref"],[645,34,982,18],[645,36,982,22],[646,0,983,12],[646,14,983,12],[646,20,983,16],[646,21,983,17,"map"],[646,24,983,12],[646,27,983,23,"ref"],[646,31,983,12],[647,0,984,11],[648,0,981,8],[648,13,985,14,"props"],[648,18,981,8],[649,0,981,8],[650,0,981,8],[651,0,981,8],[652,0,981,8],[653,0,981,8],[653,13,980,6],[654,0,988,5],[656,0,990,4],[656,12,990,10,"AIRMap"],[656,18,990,16],[656,21,990,19,"getAirMapComponent"],[656,39,990,37],[656,40,990,38],[656,45,990,43,"props"],[656,50,990,38],[656,51,990,49,"provider"],[656,59,990,37],[656,60,990,4],[657,0,992,4],[657,15,993,6],[657,44,993,7],[657,50,993,6],[658,0,994,8],[658,10,994,8],[658,13,994,11],[658,15,994,13],[658,28,994,13,"ref"],[658,33,994,16],[658,35,994,20],[659,0,995,10],[659,12,995,10],[659,18,995,14],[659,19,995,15,"map"],[659,22,995,10],[659,25,995,21,"ref"],[659,30,995,10],[660,0,996,9],[661,0,993,6],[661,11,997,12,"props"],[661,16,993,6],[662,0,993,6],[663,0,993,6],[664,0,993,6],[665,0,993,6],[666,0,993,6],[666,11,992,4],[667,0,1000,3],[670,4,530,22,"React"],[670,19,530,28,"Component"],[670,28],[672,0,1003,0,"MapView"],[672,2,1003,0,"MapView"],[672,9,1003,7],[672,10,1003,8,"propTypes"],[672,19,1003,0],[672,22,1003,20,"propTypes"],[672,31,1003,0],[673,0,1004,0,"MapView"],[673,2,1004,0,"MapView"],[673,9,1004,7],[673,10,1004,8,"viewConfig"],[673,20,1004,0],[673,23,1004,21,"viewConfig"],[673,33,1004,0],[674,0,1005,0,"MapView"],[674,2,1005,0,"MapView"],[674,9,1005,7],[674,10,1005,8,"childContextTypes"],[674,27,1005,0],[674,30,1005,28,"childContextTypes"],[674,64,1005,0],[675,0,1007,0,"MapView"],[675,2,1007,0,"MapView"],[675,9,1007,7],[675,10,1007,8,"MAP_TYPES"],[675,19,1007,0],[675,22,1007,20,"MAP_TYPES"],[675,31,1007,0],[677,0,1009,0],[677,6,1009,6,"nativeComponent"],[677,21,1009,21],[677,24,1009,24],[677,33,1009,6,"nativeComponent"],[677,48,1009,24],[677,49,1009,24,"Component"],[677,58,1009,33],[678,0,1009,33],[678,11,1010,2],[678,52,1010,25,"Component"],[678,61,1010,2],[678,63,1010,36,"MapView"],[678,70,1010,2],[678,72,1010,45],[679,0,1011,4,"nativeOnly"],[679,6,1011,4,"nativeOnly"],[679,16,1011,14],[679,18,1011,16],[680,0,1012,6,"onChange"],[680,8,1012,6,"onChange"],[680,16,1012,14],[680,18,1012,16],[680,22,1011,16],[681,0,1013,6,"onMapReady"],[681,8,1013,6,"onMapReady"],[681,18,1013,16],[681,20,1013,18],[681,24,1011,16],[682,0,1014,6,"onKmlReady"],[682,8,1014,6,"onKmlReady"],[682,18,1014,16],[682,20,1014,18],[682,24,1011,16],[683,0,1015,6,"handlePanDrag"],[683,8,1015,6,"handlePanDrag"],[683,21,1015,19],[683,23,1015,21],[684,0,1011,16],[685,0,1010,45],[685,5,1010,2],[685,6,1009,33],[686,0,1009,33],[686,3,1009,0],[688,0,1018,0],[688,6,1018,6,"airMaps"],[688,13,1018,13],[688,16,1018,16],[689,0,1019,2,"default"],[689,4,1019,2,"default"],[689,11,1019,9],[689,13,1019,11,"nativeComponent"],[689,28,1019,26],[689,29,1019,27],[689,37,1019,26],[690,0,1018,16],[690,3,1018,0],[692,0,1021,0],[692,6,1021,4,"Platform"],[692,28,1021,13,"OS"],[692,30,1021,4],[692,35,1021,20],[692,44,1021,0],[692,46,1021,31],[693,0,1022,2,"airMaps"],[693,4,1022,2,"airMaps"],[693,11,1022,9],[693,12,1022,10,"google"],[693,18,1022,2],[693,21,1022,19,"airMaps"],[693,28,1022,26],[693,29,1022,27,"default"],[693,36,1022,2],[694,0,1023,1],[694,3,1021,0],[694,9,1023,7],[695,0,1024,2,"airMaps"],[695,4,1024,2,"airMaps"],[695,11,1024,9],[695,12,1024,10,"google"],[695,18,1024,2],[695,21,1024,19,"googleMapIsInstalled"],[695,66,1025,6,"nativeComponent"],[695,81,1025,21],[695,82,1025,22],[695,96,1025,21],[695,97,1024,19],[695,100,1026,6],[695,155,1027,8],[695,259,1026,6],[695,260,1024,2],[696,0,1029,1],[698,0,1030,0],[698,6,1030,6,"getAirMapComponent"],[698,24,1030,24],[698,27,1030,27],[698,36,1030,6,"getAirMapComponent"],[698,54,1030,27],[698,55,1030,27,"provider"],[698,63,1030,35],[699,0,1030,35],[699,11,1030,39,"airMaps"],[699,18,1030,46],[699,19,1030,47,"provider"],[699,27,1030,55],[699,31,1030,59],[699,40,1030,46],[699,41,1030,35],[700,0,1030,35],[700,3,1030,0],[702,0,1032,0],[702,6,1032,4,"AIRMapLite"],[702,16,1032,0],[704,0,1033,0],[704,6,1033,4],[704,7,1033,5,"NativeModules"],[704,34,1033,19,"UIManager"],[704,43,1033,5],[704,44,1033,29,"getViewManagerConfig"],[704,64,1033,0],[704,66,1033,51],[705,0,1035,2,"AIRMapLite"],[705,4,1035,2,"AIRMapLite"],[705,14,1035,12],[705,17,1036,4,"NativeModules"],[705,44,1036,18,"UIManager"],[705,53,1036,4],[705,54,1036,28,"AIRMapLite"],[705,64,1036,4],[705,68,1037,4],[705,109,1037,27],[705,121,1037,4],[705,123,1037,41,"MapView"],[705,130,1037,4],[705,132,1037,50],[706,0,1038,6,"nativeOnly"],[706,6,1038,6,"nativeOnly"],[706,16,1038,16],[706,18,1038,18],[707,0,1039,8,"onChange"],[707,8,1039,8,"onChange"],[707,16,1039,16],[707,18,1039,18],[707,22,1038,18],[708,0,1040,8,"onMapReady"],[708,8,1040,8,"onMapReady"],[708,18,1040,18],[708,20,1040,20],[708,24,1038,18],[709,0,1041,8,"handlePanDrag"],[709,8,1041,8,"handlePanDrag"],[709,21,1041,21],[709,23,1041,23],[710,0,1038,18],[711,0,1037,50],[711,5,1037,4],[711,6,1035,2],[712,0,1044,1],[712,3,1033,0],[712,9,1044,7],[713,0,1046,2,"AIRMapLite"],[713,4,1046,2,"AIRMapLite"],[713,14,1046,12],[713,17,1047,4,"NativeModules"],[713,44,1047,18,"UIManager"],[713,53,1047,4],[713,54,1047,28,"getViewManagerConfig"],[713,74,1047,4],[713,75,1047,49],[713,87,1047,4],[713,92,1048,4],[713,133,1048,27],[713,145,1048,4],[713,147,1048,41,"MapView"],[713,154,1048,4],[713,156,1048,50],[714,0,1049,6,"nativeOnly"],[714,6,1049,6,"nativeOnly"],[714,16,1049,16],[714,18,1049,18],[715,0,1050,8,"onChange"],[715,8,1050,8,"onChange"],[715,16,1050,16],[715,18,1050,18],[715,22,1049,18],[716,0,1051,8,"onMapReady"],[716,8,1051,8,"onMapReady"],[716,18,1051,18],[716,20,1051,20],[716,24,1049,18],[717,0,1052,8,"handlePanDrag"],[717,8,1052,8,"handlePanDrag"],[717,21,1052,21],[717,23,1052,23],[718,0,1049,18],[719,0,1048,50],[719,5,1048,4],[719,6,1046,2],[720,0,1055,1],[722,0,1057,7],[722,6,1057,13,"Animated"],[722,14,1057,21],[722,17,1057,24,"RNAnimated"],[722,39,1057,35,"createAnimatedComponent"],[722,62,1057,24],[722,63,1057,59,"MapView"],[722,70,1057,24],[722,71,1057,7],[726,0,1059,7],[726,6,1059,13,"ProviderPropType"],[726,22,1059,29],[726,25,1059,32,"PropTypes"],[726,44,1059,42,"oneOf"],[726,49,1059,32],[726,50,1060,2,"Object"],[726,56,1060,8],[726,57,1060,9,"values"],[726,63,1060,2],[726,64,1060,16,"ProviderConstants"],[726,81,1060,2],[726,82,1059,32],[726,83,1059,7],[729,0,1071,0,"MapView"],[729,2,1071,0,"MapView"],[729,9,1071,7],[729,10,1071,8,"Marker"],[729,16,1071,0],[729,19,1071,17,"MapMarker"],[729,37,1071,0],[730,0,1072,0,"MapView"],[730,2,1072,0,"MapView"],[730,9,1072,7],[730,10,1072,8,"Polyline"],[730,18,1072,0],[730,21,1072,19,"MapPolyline"],[730,41,1072,0],[731,0,1073,0,"MapView"],[731,2,1073,0,"MapView"],[731,9,1073,7],[731,10,1073,8,"Polygon"],[731,17,1073,0],[731,20,1073,18,"MapPolygon"],[731,39,1073,0],[732,0,1074,0,"MapView"],[732,2,1074,0,"MapView"],[732,9,1074,7],[732,10,1074,8,"Circle"],[732,16,1074,0],[732,19,1074,17,"MapCircle"],[732,37,1074,0],[733,0,1075,0,"MapView"],[733,2,1075,0,"MapView"],[733,9,1075,7],[733,10,1075,8,"UrlTile"],[733,17,1075,0],[733,20,1075,18,"MapUrlTile"],[733,39,1075,0],[734,0,1076,0,"MapView"],[734,2,1076,0,"MapView"],[734,9,1076,7],[734,10,1076,8,"MapWMSTile"],[734,20,1076,0],[734,23,1076,21,"MapWMSTile"],[734,42,1076,0],[735,0,1077,0,"MapView"],[735,2,1077,0,"MapView"],[735,9,1077,7],[735,10,1077,8,"LocalTile"],[735,19,1077,0],[735,22,1077,20,"MapLocalTile"],[735,43,1077,0],[736,0,1078,0,"MapView"],[736,2,1078,0,"MapView"],[736,9,1078,7],[736,10,1078,8,"Heatmap"],[736,17,1078,0],[736,20,1078,18,"MapHeatMap"],[736,39,1078,0],[737,0,1079,0,"MapView"],[737,2,1079,0,"MapView"],[737,9,1079,7],[737,10,1079,8,"Overlay"],[737,17,1079,0],[737,20,1079,18,"MapOverlay"],[737,39,1079,0],[738,0,1080,0,"MapView"],[738,2,1080,0,"MapView"],[738,9,1080,7],[738,10,1080,8,"Callout"],[738,17,1080,0],[738,20,1080,18,"MapCallout"],[738,39,1080,0],[739,0,1081,0,"MapView"],[739,2,1081,0,"MapView"],[739,9,1081,7],[739,10,1081,8,"CalloutSubview"],[739,24,1081,0],[739,27,1081,25,"MapCalloutSubview"],[739,53,1081,0],[740,0,1082,0],[740,25,1082,14,"MapView"],[740,32,1082,0],[740,34,1082,23,"ProviderConstants"],[740,51,1082,0],[741,0,1083,0,"MapView"],[741,2,1083,0,"MapView"],[741,9,1083,7],[741,10,1083,8,"ProviderPropType"],[741,26,1083,0],[741,29,1083,27,"ProviderPropType"],[741,45,1083,0],[742,0,1085,0,"MapView"],[742,2,1085,0,"MapView"],[742,9,1085,7],[742,10,1085,8,"Animated"],[742,18,1085,0],[742,21,1085,19,"Animated"],[742,29,1085,0],[743,0,1086,0,"MapView"],[743,2,1086,0,"MapView"],[743,9,1086,7],[743,10,1086,8,"AnimatedRegion"],[743,24,1086,0],[743,27,1086,25,"AnimatedRegion"],[743,50,1086,0],[744,17,1088,15,"MapView"],[744,24]],"functionMap":{"names":["<global>","MapView","constructor","getChildContext","getSnapshotBeforeUpdate","componentDidUpdate","componentDidMount","_updateStyle","_onMapReady","setState$argument_1","_onLayout","_onMarkerPress","_onChange","getCamera","setCamera","animateCamera","animateToNavigation","animateToRegion","animateToCoordinate","animateToBearing","animateToViewingAngle","fitToElements","fitToSuppliedMarkers","fitToCoordinates","getMapBoundaries","setMapBoundaries","setIndoorActiveLevelIndex","takeSnapshot","Promise$argument_0","<anonymous>","pointForCoordinate","coordinateForPoint","getMarkersFrames","boundingBoxForRegion","_uiManagerCommand","_mapManagerCommand","_getHandle","_runCommand","render","AIRMapLite.props.ref","AIRMap.props.ref","nativeComponent","getAirMapComponent"],"mappings":"AAA;ACihB;ECC;GDW;EEE;GFE;EGE;GHQ;EIE;GJc;EKE;GLK;EME;GNK;EOE;qCCQ;KDI;GPC;ESE;GTkB;EUE;GVI;EWE;GXS;EYE;GZO;EaE;GbE;EcE;GdE;EeE;GfU;EgBE;GhBE;EiBE;GjBK;EkBE;GlBK;EmBE;GnBK;EoBE;GpBE;EqBE;GrBO;EsBE;GtBO;EuBO;GvBS;EwBE;GxBE;EyBE;GzBE;E0BgB;yBC4C;UCQ;WDM;ODE;G1BG;E6BW;G7BU;E8BW;G9BU;E+BS;G/BK;EgCS;GhCW;EiCE;GjCW;EkCE;GlCe;EmCE;GnCE;EoCE;GpCe;EqCE;eCoC;WDE;aEU;SFE;GrCI;CDC;wByCQ;IzCQ;2B0Ca,0C1C"}},"type":"js/module"}]}